<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sheronw.github.io/</id>
    <title>Sheron W Blog</title>
    <updated>2022-02-05T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://sheronw.github.io/"/>
    <subtitle>Sheron W Blog</subtitle>
    <icon>https://sheronw.github.io/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[封禅与五岳的演变]]></title>
        <id>/2022/02/05/wuyue_fengchan</id>
        <link href="https://sheronw.github.io/2022/02/05/wuyue_fengchan"/>
        <updated>2022-02-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[本文为于朝阳在「泰山那么矮，为啥是五岳之首？」知乎问题下的回答的阅读笔记。]]></summary>
        <content type="html"><![CDATA[<p>本文为于朝阳在「泰山那么矮，为啥是五岳之首？」<a href="https://www.zhihu.com/question/36468499/answer/1021858234" target="_blank" rel="noopener noreferrer">知乎问题下的回答</a>的阅读笔记。</p><p>五岳演变及其引发的争议，乍一看像中世纪神学家们讨论「一个针尖上能站几个天使」一样让现代人摸不着头脑。但事实上，改岳多是为了证明政权的正统性，封禅多是为了拉拢东方势力，背后有着复杂的历史、政治甚至文化成因。</p><p>这么一想，没有五岳那么重要的当代「中华十大名山」，吉林长白山、西藏珠穆朗玛峰和台湾玉山赫然在列，是不是也有类似的考量呢？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="北岳">北岳<a class="hash-link" href="#北岳" title="Direct link to heading">​</a></h2><p>我们熟悉的那个有悬空寺的北岳恒山，是清朝才确定下来的。之前占有「北岳」这个名头的是河北曲阳县常山。在古人的世界观里，北岳应在京师以北，但明朝迁都到北京后，古北岳就到了京师的南边，因此引发了改岳的争议。</p><p>明朝期间曲阳北岳和浑源北岳在朝廷和民间都各自有支持者，但政府却迟迟没有定准信，考虑的是改岳会影响「明朝为汉唐正统」的法理性。清顺治入关后，为强化满族统治，在文化上立威，便顺利地将北岳改为了今天的浑源天峰岭。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="南岳">南岳<a class="hash-link" href="#南岳" title="Direct link to heading">​</a></h2><p>南岳之争更久远，是一笔几乎不可考的糊涂账。目前可以找得到山头的有湖南衡阳的江南衡山，与安徽潜山的江北霍山（现在叫天柱山）；还有一种接受度很低的说法在湖北荆州。</p><p>汉武帝钦定霍山为南岳，但离谱的是，根据「史记」中的记载，汉武帝钦定的这个「江北霍山」和我们现在所知的「江南衡山」地理位置一致；而东周的史料中，也基本上找不到关于「江北霍山」的记载——也就是说，汉武帝说的这个「霍山」，可能就是江南的那座「衡山」，只不过后来又改名改成了「霍山」。</p><p>这些地名的混乱问题，可能要让古楚国背锅——楚国长期向南扩张，命名系统又比较奇葩（每次迁都的都城都叫一个名字），外加战国后期楚国疆域不断被秦国蚕食，地名混乱就不足为奇了。</p><p>总体来说，江南衡山在民间和学界的接受度更高。南北朝时，北周宇文氏高举恢复周制的大旗，将江南衡山封为南岳，并延续至今。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="西岳">西岳<a class="hash-link" href="#西岳" title="Direct link to heading">​</a></h2><p>西岳华山倒是没改过，但在周朝的时候出了一点点小问题——周朝的都城在华山西边。周公提出了两个方案：要么在都城西边找个山封西岳，要么在华山西边找个东都。</p><p>但周朝不比明清时代，那时候地理崇拜还是很重要的，特定的那几座「岳」可是世界观的重要支柱，所以西岳不是想改就改，最后洛邑（今天的洛阳）成为东都，五岳方位以东都为定。</p><p>唐玄宗的时候，华山道士开凿完毕了第一条通往山顶的路。另一方面，关陇集团逐渐衰落，不再需要安抚关东来削弱其势力。正值唐朝国力强盛之时，封禅华山、宣扬长安的政治地位（天下至尊）便提上了日程。然而关中突发旱灾，此次封禅最终不了了之；唐朝之后，京津冀和江南地区又成为了政治焦点，华山失去了封禅的机会。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="中岳">中岳<a class="hash-link" href="#中岳" title="Direct link to heading">​</a></h2><p>中岳嵩山也没改过，但地位一路下滑，现代人想起嵩山可能想到的反而是少林寺而不是中岳。古人有中原崇拜，华夏正统（夏商）也起于中原。甲骨文中的「岳」在一开始是特指中原某个神山，而这个神山就很有可能是中岳嵩山了，地位高于其他的东西南北四座山。</p><p>中岳嵩山的第一次大危机，就是之前提到的华山改岳事件。对于「岳」这座神山的崇拜本质上是周围部落对先进中原的崇拜，而周朝的首都竟然都跑到西边的山外面去了，这对建立在「天子在中岳，疆域范围在东西南北的其他四座山」基础上的世界观是一个巨大冲击，中原崇拜也随之弱化。虽然最后周朝改都，但中岳不再是特指的「岳」，五岳的世界观逐渐形成。</p><p>虽然中岳的地位不再那么神了，但无数王朝还是愿意把首都放在中原，从而解释了为什么洛阳是中国古代历史上建都朝代最多的城市。然而历史一次又一次地打了人们的脸——中岳附近建都并不能阻止王朝的覆灭，至少没有什么特别的优势；宋朝的经济、政治中心南移更是成为了压垮中岳地位的最后一根稻草。</p><p>大运河开凿后，北京逐渐成为了政权的焦点，五岳的政治文化地位随之削弱，五岳祭祀逐渐变成一种例行公事，所以北岳之争关注度就已经很低了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="东岳">东岳<a class="hash-link" href="#东岳" title="Direct link to heading">​</a></h2><p>泰山的五岳之首地位，要归功于两个重量级粉丝——秦皇汉武；而泰山的多次封禅，本质上是关中起家的政权的统战手段，目的是拉拢关东势力、削弱关陇势力。运河兴起之后，南北方成为政治经济的轴心，因此封禅就不再有必要了，反而是乾隆多次下江南。</p><p>秦始皇封禅泰山可能有太阳崇拜的因素（日出东方），但主要还是为了对冲中原崇拜、解决秦制的合法性，以及讨好东方群众。其一，秦始皇时首都在咸阳，已经在华山以西了，但他却没有像周朝那样搞一个东都，舆论上不得人心。为了弱化中原崇拜，巩固秦制，提高东岳的地位就说得过去了。其二，秦始皇开创的中央集权制早期是被相当多的人抵制的，尤其是信奉周礼的儒生。因此封禅泰山的另一个重要目的就是拉拢远在东方的齐鲁文化与儒家学派，进而收买广大关东地区的势力。秦始皇在位晚期的焚书坑儒，是因为他不搞分封，还是和儒家合不来，因此政治方针变更，独尊法家，这就是后话了。</p><p>汉武帝封禅泰山的理由也与秦始皇类似——汉武帝确实采纳了董仲舒的「罢黜百家独尊儒术」，但经历了郡国并行的失败后，儒家已经放弃分封了。汉武帝的封禅有点像「胡萝卜加大棒」政策，一边对关东实行高压统治，一边通过封禅提高东岳泰山的地位、向关东豪族示好。之前提到的册封南岳，也是先要探一探各路势力的口风。然而到了西汉末期，关东豪杰势力兴起，关中贵族在妥协之下重新搞了个东都洛阳。王莽失败之后，关东豪杰甚至直接在洛阳建了东汉，中原崇拜再次兴起。东汉是关东本位政权，但光武帝刘秀为巩固皇权一直在削弱关东势力。不过他晚年却计划了一次封禅，也是为了拉拢关东贵族，在皇位交替之间提供支持。</p><p>唐太宗也是想封禅的，但最终没有这么做，因为他上位是山东集团和关陇集团的协调之举，封禅会刺激到两边利益相关。武则天她老公唐高宗即位时，想要利用党争内耗强化皇权，就封了一次东岳。武则天则更进一步，先是把原本在关中的首都（长安）迁到洛阳，又封禅了洛阳旁边的中岳嵩山，明摆着是要利好关东地区，打压关陇势力。武周势力衰落后，唐玄宗李世民的态度比较中立，封禅东岳，往返于长安和洛阳之间。</p><p>最后一次封禅泰山，是由（疑似）篡位夺权的宋太宗的后任宋真宗完成的。和之前为了安抚地方集团不同，这次的封禅是为了证明宋太宗这一支脉的统治正当性，当然期间民间一直争议不断，到了宋孝宗这一代皇位还是回到了宋太祖后代手上。</p>]]></content>
        <category label="阅读笔记" term="阅读笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[两家中餐馆、折扣超市与中超送货，还有俩月没手机]]></title>
        <id>/2021/04/29/one-year-of-isolation</id>
        <link href="https://sheronw.github.io/2021/04/29/one-year-of-isolation"/>
        <updated>2021-04-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[与上一学年的对比]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="与上一学年的对比">与上一学年的对比<a class="hash-link" href="#与上一学年的对比" title="Direct link to heading">​</a></h2><p>参考<a href="https://sheronw.xyz/blog/2020/08/14/my-pandemic-life" target="_blank" rel="noopener noreferrer">去年的文章</a>。上了一年工程学院的网课，但人还呆在村里，于是标题十分形象地概括了我的日常。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="生活方面">生活方面<a class="hash-link" href="#生活方面" title="Direct link to heading">​</a></h3><p>我的确就在村里呆了一年（严格来说，我还去了 3 次开车半小时距离的一个购物中心）。这个我熟悉到都快吐了的小镇，倒了一家中餐馆但又新开了一家更正宗也更贵的；麦当劳要走半个小时，因为堂食关了，等餐的时候只能在暴风雪中瑟瑟发抖（他们甚至趁着疫情把整个店铺里里外外翻修了一遍，就是<strong>不让人进</strong>），好消息是肯德基从去年底开始在 Uber Eats 上不定期（看派送员心情）配送，但配送费 10 刀起步。房东有时会顺便带我去一家车程 20 分钟以内、30 刀就能买到好多东西的折扣商店，我一开始觉得「不到 2 刀一打的鸡蛋真的能吃吗」，现在不仅真香还沉迷就着 1 刀一盒的苏打饼干啃 2 刀一大块的烟熏 Gouda 奶酪。令人快乐的是每两周一次的中超配送，囤一堆速冻饺子包子丸子，没时间做饭的时候就搞一搞，到现在我都没把中超送货单上的所有速冻食品试个遍（这 SKU 比我家附近的胶东半岛某连锁超市不知道多了多少倍）。</p><p>不过虽然说是这么说，但每隔一段时间就有一种「好他妈想出去走走啊」的冲动，然后要么择良辰吉日打个 Uber 去同一个购物中心吃同一家寿司，要么继续躺着。好在周围的人都没有确诊新冠肺炎，现在更是都打上了疫苗，希望这个暑假至少能够出去走走吧。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="学习方面">学习方面<a class="hash-link" href="#学习方面" title="Direct link to heading">​</a></h3><p>工院一学期要求上的课比村里一学期能选的所有专业课都多，外加优秀的人超多竞争也激烈，于是我在学年刚开始还没有被暴击的时候就十分从容地躺平了，把重心全放在准备面试投简历上。毕竟我只是平平无奇的中游学生，就不去刻意卷 GPA 了。总体来说，我十分享受新学校的福利：</p><ul><li><p>可以上许多工程方面的课程，即使是理论课程也会有很多工程类的作业，写代码的时间明显增多，编码能力（希望）也提高了。<del>（真相是每天早上起来都会默念一句“我是废物”，然后躺平被同一小组的大佬带飞）</del></p></li><li><p>认识的人似乎更加多元了（之前所在的 LAC，大部分都是美国中产白人出身）——课上有来自孟买讲标准美式英语的社会学专业小姐姐（之前可能是一亩三分地刷太多，我对印度人有点刻板印象），还给一个商学院的意大利人写了一些前端，一起做作业的小组成员有来自印度的博士生、夏威夷出生的日裔美国人……我还去闲着没事去上了语言课，虽然我的语言水平好像在这个班里显得非常突兀（但也远远达不到 native speaker 的程度？），一度纠结要不要退课，但最后还是觉得每周末和不同的人大眼瞪小眼鸡同鸭讲尬聊一下挺不错的。上这门网课的人也杂七杂八，比如土耳其的心理专业学者、不知道为啥过来做生意的西班牙老奶奶、从日本来医学院交换的心脏科医生、还有嫁给美国人当家庭主妇非常爱说话的韩国姐姐……明明人在村里，但却和不同的人聊天，有种奇妙的空间错位感。</p></li><li><p>工院每年的毕业生一堆，所以校友一堆，HR 也都听说过这学校。我甚至都没有找校友尬聊求内推，光靠海投就拿了不少笔试和面试，最后也算是找到了软工实习。一套流程下来，学校的 Career Center 和一些有过大厂面试经验的新同学确实有帮助，感觉工院的氛围和 LAC 还是差别蛮大的<del>，自己似乎从考研读博预备军变成了社畜预备军，从一个围城跳到了另一个围城</del>。</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="与其说是自救不如说是适应了新的日常">与其说是自救，不如说是适应了新的日常<a class="hash-link" href="#与其说是自救不如说是适应了新的日常" title="Direct link to heading">​</a></h2><p>疫情刚刚开始的时候，我竭力装作无事发生，尽可能地保持像往常一样的生活。很快我就发现 back to normal 实在是太难了，不如探索新的生活方式。</p><p>其一，熬到下半夜的 bug 已经成功修复，十二点前熄灯睡觉。然而，没有什么需要赶的早课，也不需要每天早上去食堂吃早餐，我很快发现起床闹铃不是一个很有必要的东西——只要作息规律，每天的起床时间就在一个可预估的范围内。全网课的一个好处是在校园内走来走去到各个建筑物做不同事情的步行时间被省了下来，于是我发现我可以每天十分奢侈地比之前多睡一个小时以上，拥有了许多当代青年梦寐以求的「睡到自然醒」。刚刚开始实行这个计划的时候，我会觉得正常人「睡到自然醒」，是不是太懒惰、太不自律了？然而实际操作后发现，因为夜晚睡眠充足，所以不需要午休，白天也经历充沛，有效学习时间反而变多了，即使是最忙的秋招季，也不用刻意熬夜或者早起。</p><p>其二，不需要走来走去，从另外一种角度来说，也是弊端——根据我手机计步器的数据，前年每个月的步数都能达到 30 万以上，而在疫情之后，这个数据最低 4 万，平均值应该是 10-15 万左右。为了鞭策自己至少出去走走，我会和朋友约好，每周两次从小镇这头走到那头去约个学习局或者看个番，但也仅限于此了。像我这种懒鬼，本来全靠这些被动运动量苟着，现在可能一天都不会出一次门，因此我会没有根据地觉得自己的体质变差了。不过因为三餐规律，这段时间没有什么肠胃不适，算是一个好消息吧。</p><p>其三，去年提到过的学习环境，这一年我将学习区域与生活区域进行了成功划分。与房东协商之后，我将所有电子设备和学习用品都放到了楼下的走廊尽头，楼上的厕所和卧室属于生活空间。缺点是虽然两侧的门都可以关上，走廊毕竟不是真的书房，所以房东有时会在旁边来回走动。除此之外，因为距离客厅太近，所以即使关上门也能听到电视的声音。</p><p>于是，我的纯网课时代工作流大致如下：</p><ul><li><p>自然醒，洗漱完毕到楼下。随便吃点面包之类的简餐，就打开电脑，刷一下各种信息流（为了防止自己停不下来，我一般会顺手搞一个倒计时），然后查看所有的邮件与工作及小组作业用的即时通讯工具（对，手机没装），将需要分配的任务写在日程本上。</p></li><li><p>午饭一般都是自制三明治、象征性地加一点点点点蔬菜的泡面或者中式速冻食品（吃枣药丸），有时也会周末提前将亲子丼原料分装好然后工作日中午丢进锅里速成。因为晚上睡很久，所以不需要午休，甚至咖啡都不用喝也不会觉得困。</p></li><li><p>如果有课的话，我会散步去朋友家听一下网课然后再回来，给自己一种转换环境的心理暗示，但大部分时间我都是坐在走廊里的电脑前干各种活——网课的一大负面效应就是久坐，而我暂时还没有想出比较好的解决办法。比如，每隔几个月就会有些干眼的症状，然后就要减少屏幕时间，休息几天；另外，上网课非常容易一坐就是好几个小时，根本不起来活动；有的时候鼠标用多了手也会痛。我考虑过一坐下去就设一个计时器，后来发现与每天一次的 feed 流获取不同，基本上只要在学习，就需要不停定计时器，实在是太麻烦了，经常忘记，更何况有的时候写代码一写就是四五个小时起步，坐个十二个小时都是有可能的，突然一个闹钟过来也会干扰自己。</p></li><li><p>晚饭我会讲究一点。出去吃一般都是（正宗 or 美式）中餐、汉堡和墨西哥菜选一个打包回来；外卖几乎只能点比萨和汉堡；下厨的话会做中餐。我对于吃没有什么特别卓越的追求，也不觉得美式快餐不能下咽，然而确实，十分容易发胖（捂脸）。</p></li><li><p>我不区分上午下午或者晚上做什么，一般会在电脑前呆到就寝时间，去楼上洗漱一下准备睡觉，偶尔会用索尼电子纸看下 newsletter 推荐的文章。（之所以买了索尼，是因为有段时间眼睛疲劳程度很严重，看屏幕都会觉得刺痛，而美国也买不到类似于文石这样性价比比较高的牌子，就草草地选了索尼，虽然作为一个阅读爱好者体验确实不错）</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="手机似乎成为了一种不那么必要的东西">手机似乎成为了一种不那么必要的东西<a class="hash-link" href="#手机似乎成为了一种不那么必要的东西" title="Direct link to heading">​</a></h2><p>在今年波澜不惊的无聊生活中值得一提的最有趣事件大概是发现「卧槽我好像根本不需要手机」这件事了。契机是我的手机变砖，出村买新的很麻烦，网上订购又要等一个多周。于是我采取了一系列的应急政策：</p><ul><li><p>因为运营商是 Google Fi，所以只要有谷歌账号就能在 Android 信息网页版收发短信和电话，手机的最基本功能得到了保留（现在手机号码除了接收验证码和骚扰电话之外好像也没用了，连 HR call 你都要发个邮件提前约好时间的）</p></li><li><p>除了极个别应用之外，所有的常用手机应用都有对应的网页版本或电脑端应用（没错，连 Doordash 这种外卖软件都有网页版，而且体验还挺不错的）</p></li><li><p>微信和 Venmo 等应用属于「电脑不可用但 ipad 可用」，于是我拿出了买了六年的 iPad mini 2</p></li><li><p>WhatsApp 属于罕见的不能脱离手机的应用，好在只是用来做小组作业，我开了个安卓虚拟机</p></li></ul><p>于是呆在村子里都快无聊疯了的我开始一顿折（zuo）腾（si），惊奇地发现没有手机并没有对我的日常生活产生什么特别大的影响，原因也非常显而易见：</p><ul><li><p>美国网页端的生态还算比较强势，不会出现国内手机端做得非常臃肿但网页版要么没有要么十年没改过版的尴尬情况</p></li><li><p>荒村的信息化程度非常低，可以说是落后国内二十年，因此不会「没有手机寸步难行、也不能买东西」，只要出门带信用卡就够了（唯一的例外是麦当劳，如果去店里打包的话需要强制用它的手机应用点餐，但 Doordash 上也有）</p></li><li><p>不出门，绝大多数醒着的时间都在对着电脑，即使出门的话也只在白天去治安比较好的区，不需要手机作为紧急联络手段；如果出远门，大概率会有多人陪同，因为一个人打车太太太太太太太不划算了</p></li><li><p>非常幸运地，所在的学校没有要求我开启二步认证并且下载相应的手机应用（但暑期实习就需要了）</p></li><li><p>美国特立独行的成本比较低，我房东之前约过一个修屋顶的，连老人机都不用，全靠别人发邮件约好时间地点然后等人，要迟到了都联系不上的那种</p></li></ul><p>因此，如标题所示，我成功拖了两个多月没有买手机，但这种生活方式仅适用于<strong>疫情期间住在美国村镇里</strong>这种特殊情况，我并不想标榜这种生活方式——之前倒是挺流行「远离手机，远离碎片化信息，获得内心的平静」这种论调，但我个人觉得手机只是一种媒介罢了，一个提供碎片化信息的手机应用挪到网页端并不会改变它的本质，而愿意阅读长文的人用手机也可以看书看文章。为数不多的好处大抵是，电脑不太容易随身带着，所以不会出现躺在被窝里或者沙发上玩手机这种情况，也不会动不动就查看邮件了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="是新常态但不可持续">是新常态，但不可持续<a class="hash-link" href="#是新常态但不可持续" title="Direct link to heading">​</a></h2><p>然而，这种生活方式仅限于疫情之下的避难——手机已经下单了，下学期也要回到学校，开始在大都市居住，back to normal 最终还是不可避免的。但一些习惯仍然值得参考，比如，睡眠习惯，集中时间获取信息流，以及在室内使用手机的必要性。需要改进的方面我觉得主要是身体素质，这一年运动量大幅减少，明年住的宿舍楼下就是健身房，一定要多去锻炼，美式快餐也要少吃点；作为一个城里人，可以适当学习一下穿搭。</p><p>有一件事尤其值得注意、并排到最高优先级——随着下周实习的开始，要开始准备从学生过渡为社畜了。十几年学生生涯中养成的习惯，也许不是全部可以应用到工作中；很多完全崭新的内容，也只能够在工作中才能接触到。这么一想，等到下次写学年总结的时候，如果不出意外的话，自己就应该是真正的社畜，并开始为一些无聊的大人的事情操心了吧。明年如果要写学年总结的话也会是最后一篇学年总结，因为我也再不是学生了。我自认是个胸无大志还想躺平的庸人，所以当拿到毕业证的那一刻起，似乎就要开始走上另一个平平无奇的循环，就业，升职，结婚，生子，围着孩子和家里老人鸡飞狗跳……而上大学之前的各种光怪陆离的理想，也逐渐变得模糊了。</p>]]></content>
        <category label="荒唐言" term="荒唐言"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Assign a Subdomain to Elastic Beanstalk and Enable HTTPS]]></title>
        <id>/2021/01/04/subdomain-https-for-eb</id>
        <link href="https://sheronw.github.io/2021/01/04/subdomain-https-for-eb"/>
        <updated>2021-01-04T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[To enable HTTPS (easily), make sure you created one Elastic Beanstalk environment with Load Balancer option.]]></summary>
        <content type="html"><![CDATA[<blockquote><p>To enable HTTPS (easily), make sure you created one Elastic Beanstalk environment with Load Balancer option.</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="create-hosted-zone">Create Hosted Zone<a class="hash-link" href="#create-hosted-zone" title="Direct link to heading">​</a></h2><ul><li>find Route 53 in AWS console</li><li>choose <code>hosted zones</code> on the left</li><li>click <code>create hosted zone</code></li><li>write your <code>subdomain.example.com</code> as domain name, choose <code>public hosted zone</code> and then click <code>create hosted zone</code></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="edit-ttl-optional-for-testing">Edit TTL (optional for testing)<a class="hash-link" href="#edit-ttl-optional-for-testing" title="Direct link to heading">​</a></h2><ul><li>find the NS record in this hosted zone, select and click <code>edit</code></li><li>change TTL to some value like 900 (15 min), by default the value is 172800 (2 days)</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="add-alias-resource-record">Add Alias Resource Record<a class="hash-link" href="#add-alias-resource-record" title="Direct link to heading">​</a></h2><ul><li>click <code>create record</code> in this hosted zone</li><li>just leave blank for <code>record name</code></li><li>enable <code>alias</code> and assign <code>route traffic to</code> as your elastic beanstalk application</li><li>click <code>create</code></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="add-ns-records-for-the-subdomain">Add NS Records for the Subdomain<a class="hash-link" href="#add-ns-records-for-the-subdomain" title="Direct link to heading">​</a></h2><ul><li>go to your domain provider and find the place to add records, for example, in Google Domains, go to <code>DNS</code> and find <code>custom resource records</code> section</li><li>copy and paste the NS record in the hosted zone that you created just now, for example, in Google Domains, name should be <code>subdomain</code> (some providers use <code>subdomain.example.com</code>), type should be <code>NS</code> and data should be the values from NS record in the hosted zone, there might be several lines of value and you could use the smaller <code>+</code> sign to add them in one record</li><li>could also set TTL to 900</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="change-ttl-back-optional">Change TTL back (optional)<a class="hash-link" href="#change-ttl-back-optional" title="Direct link to heading">​</a></h2><ul><li>if you lowered TTL for testing, don't forget to change them back to default value</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="request-a-certificate">Request a Certificate<a class="hash-link" href="#request-a-certificate" title="Direct link to heading">​</a></h2><ul><li>go to Certificate Manager in aws</li><li>click <code>request a certificate</code>, choose <code>request a public certificate</code></li><li>type your <code>subdomain.example.com</code> and then choose DNS validation</li><li>choose to import the CNAME record into Route 53 automatically</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="load-balancer-configuration">Load Balancer Configuration<a class="hash-link" href="#load-balancer-configuration" title="Direct link to heading">​</a></h2><ul><li>make sure you created an environment with load balancer</li><li>go to your elastic beanstalk environment</li><li>click <code>configuration</code> on the left side bar</li><li>find <code>load balancer</code> and edit</li><li>click <code>add listener</code></li><li>port is <code>443</code>, protocol is <code>HTTPS</code> and choose the previous created certificate as your ssl certificate</li><li>click <code>add</code></li></ul>]]></content>
        <category label="折腾记录" term="折腾记录"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我已经忘记半年前在做什么了]]></title>
        <id>/2020/08/14/my-pandemic-life</id>
        <link href="https://sheronw.github.io/2020/08/14/my-pandemic-life"/>
        <updated>2020-08-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[这篇文章是我今年的年度总结，准确来说，是「这半年」的居家隔离总结，因为这半年的生活的确是十分之废，以至于我对一切正常的「前半年」实在是没什么印象了。]]></summary>
        <content type="html"><![CDATA[<p>这篇文章是我今年的年度总结，准确来说，是「这半年」的居家隔离总结，因为这半年的生活的确是十分之废，以至于我对一切正常的「前半年」实在是没什么印象了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="与上一学年的比对">与上一学年的比对<a class="hash-link" href="#与上一学年的比对" title="Direct link to heading">​</a></h2><p>参考<a href="https://sheronw.xyz/blog/2019/05/21/bye_sophomore/" target="_blank" rel="noopener noreferrer">去年的文章</a>。大方向上没什么问题，下学期去工院，看了下课表的确比我们村里的课有趣很多，毕竟我们学校根本没有什么软工相关的内容，主要都是偏数学方向的 。</p><p>然后是，自学了点前端，设计的话本来打算认真研读学术书籍，但连基础课的课本都没啃下去，最后还是直接靠感觉去玩 figma 了，affinity 没怎么折腾。人文社科类其实加起来也没上多少（而且成绩的确不太好看……），最后还是去预习以及搞自主课程了。</p><p>跳脱同温层做的还不错，毕竟认识了人之后聊聊天的确不是什么负担。</p><p>有效学习，上半学期做的还不错，下半学期有点难说。因为下半学期作息垮掉了，以至于有效学习时间少得可怜，但只要在学的时间反而很集中精力。交流的话，中文可能有进步，而用英语交流的能力还是原地踏步。写作的确有在做尝试，算是做到了吧，在这个过程中也将知识运用了。不得不说「自己认为懂了」和「能够讲给别人」的确是两码事，一开始这么做的时候，讲清楚一道 Leetcode hard 就浪费我一下午的时间（我的确不聪明）……不过渐渐的也就习惯了，觉得这个过程没有那么让人抗拒。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="网课之后发生了什么">网课之后发生了什么<a class="hash-link" href="#网课之后发生了什么" title="Direct link to heading">​</a></h2><p>三月份网课之后整个人肉眼可见地垮掉<del>，根本原因是沉迷谈恋爱</del>。但我毕竟不是激进的 FFF 团成员，所以比起认同「谈恋爱使人颓废」这种论调，我还是觉得这只是一个让人松懈的借口，只要时间分配合理并且沟通得当，这种情况不应该出现<del>，根据 rescueTime 的数据，我其实把大部分时间用在了打游戏上，因为没有控制变量，不排除我作为一个单身狗一个人呆在宿舍里也会变成这样</del>。当然，如果你发现你的伴侣有意打扰你的学习或者过分控制你的生活，比如不让你学习而是让你陪 TA 做你不想做的，那就是另一回事了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="睡眠时相后移">睡眠时相后移<a class="hash-link" href="#睡眠时相后移" title="Direct link to heading">​</a></h3><p>让我自我感觉「垮掉」的很大一个原因是晚睡晚起。根据高中的经历，早睡（但不一定）早起是对我来说最高效的作息（心理和生理上），除了可能是遗传的生理因素，我在上初中之前都和长辈住同一间房，不得不五点半起八点半睡，因此心理上也会认同这种作息。</p><p>但疫情宅宿舍期间有一次我打游戏打到了凌晨三点，然后就很难回去了——比起睡前平稳地入睡，通宵游戏之后大脑仍然是保持亢奋状态，所以即使身体感到疲劳也不容易像白天劳累过度那样很快睡着，暑假和几个修仙男孩同租隔音不够好的房子更是让我放弃了恢复作息的想法，直到最近搬出去和老年房东同住才恢复过来。</p><p>还有一个因素是光照。我有个奇怪的习惯就是从来不拉窗帘，因为夜晚全黑的环境让我没有安全感，睡不着的时候我可能还会盯着外面路灯发呆。不知道是不是因为我的身体习惯了每天被阳光照醒，自从隔离后我重新设计了宿舍的布局（在靠门的地方添加了冰箱、厨具和食物储存架等等），把床挪到了阳光不那么充足的地方之后，起床就更艰难了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="运动与饮食">运动与饮食<a class="hash-link" href="#运动与饮食" title="Direct link to heading">​</a></h3><p>作为一个废宅，上半年还能偶尔约朋友去几次健身房，健身房关了之后除了散步之后就再也没有运动过。与此形成鲜明对比的是我的食量反而大大增加，因为自己在宿舍做的饭实在是比美国的食堂餐好吃太多了。</p><p>再就是之前说过的睡眠问题也会直接影响到消化系统——晚起晚睡会导致三餐的不规律，三餐的不规律又会导致排便的不规律。虽然半年过去体重不增反减，但我觉得应该是肌肉都没了，而且现在我三天两头就会出现轻微的肠胃不适。</p><p>还有不知道是不是因为隔离容易「不快乐」，我开始摄入比之前多好多倍的含糖饮料（包括但不限于废宅快乐水），摄入糖分过多会对身体造成什么影响就不说了。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="过于矫情地追求整洁环境">过于矫情地追求整洁环境<a class="hash-link" href="#过于矫情地追求整洁环境" title="Direct link to heading">​</a></h3><p>疫情之前，包括我在内的大部分人的生活都是分区的——吃饭在餐厅或食堂，上课在教室，学习在图书馆，宿舍主要用来休息和部分学习。但疫情期间宿舍承担了上述所有的功能，以至于需要的东西增多，并且更难以维持环境，环境越乱就越不想收拾，越不想收拾就越乱。</p><p>还有一个问题就是我暑假的暂住地没有提供书桌，为了两个月买个书桌太奢侈了，所以只能坐在床上或者在餐桌上学习。要不是有 deadline，我的生活大概率会变得非常懒散。虽然「没了桌子就不能学习」这种想法过于矫情，但有书桌作为一个「学习区域」我认为肯定是比没有好的。</p><p>之前还有「家境不好的人更容易在远程授课中落后」这种观点，对于那些对此怀疑的人，我觉得根本无需模拟家里一堆弟弟妹妹需要照顾、网络不通畅或者有噪音的环境，可以先把自己房间的桌子全撤了试试——虽然很多人都抱怨学校宿舍怎么怎么垃圾，但对于低收入家庭出身的大学生来说，宿舍可能是自己能够维护并居住的学习氛围最好的地方了。（甚至对于我这种不好意思说自己是低收入家庭出身的大学生来说，宿舍也是学习氛围最好的地方。）</p><p>因为没有控制变量，我不知道自己在生活规律的情况下是否可以无视「没有整洁书桌」这个障碍，但有条件的话，我认为下学期还是应该划出一个特定的区域用来学习。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="如何在网课时期自救">如何在网课时期自救<a class="hash-link" href="#如何在网课时期自救" title="Direct link to heading">​</a></h2><p>其实如果下学期去新学校的宿舍，上述的问题<strong>可能</strong>会得到解决，但最后还是决定留在村里了。毕竟今天刚刚宣布所有本科生课程改为线上，所以过去之后也是在宿舍里上网课。而且万幸的是，我们村的医疗资源还可以，村民也算有防范意识，<del>最主要村里舒舒服服住半年的花费相当于纽约城里不太舒服地住一个月，轻松省下大几千美金</del>。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="打扫卫生清理环境">打扫卫生，清理环境<a class="hash-link" href="#打扫卫生清理环境" title="Direct link to heading">​</a></h3><p>在开学之前，先断舍离一波，能 yard sale 就 yard sale，不能就丢（提高生活质量是一部分，更重要的是是方便几个月之后可能的搬家）。</p><p>更重要的是，保持环境整洁，区分好学习区域和生活区域并严格执行。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="假装无事发生">假装无事发生<a class="hash-link" href="#假装无事发生" title="Direct link to heading">​</a></h3><p>意思是假装我上的不是网课，伪装成正常上大学的样子，包括并不限于每天作息饮食规律，该洗澡的时候洗澡，该穿戴整齐就穿戴整齐。之前看别人的经验总结里有一条值得我借鉴，就是按时上网课并打开摄像头，虽然开摄像头也能划水，但总比全关了要强，而且可以用这个来约束自己保持一定程度上的生活仪式感——按时上课、穿戴整洁、跟上课堂进度并和教授之间有反馈等等。</p><p>至于具体的睡眠饮食等，只要回到半年之前的状态即可，没有什么需要总结的地方。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="约束感">约束感<a class="hash-link" href="#约束感" title="Direct link to heading">​</a></h3><p>假期中为了保持「被人监督」的感觉，尝试了许多方法，比如油管上的 study with me 直播，不过前几次还有点新鲜感，之后就没什么用了，更多的是自欺欺人。很多学习类的 up 主或者 YouTuber，虽然不乏有高质量的内容产出，但有不少是为了炒作自己（出道预备，就不点名了）或者带货（主要是文具和效率工具），偶尔当娱乐看看即可，定期观看的话至少不会对我产生什么太大作用。</p><p>更靠谱的可能是学习小组或学校组织的定期学习某类内容的活动，比如考研小组或刷题小组之类的。但毕竟大家都是成年人了，其实只能靠自己自律，也不要指望别人能够真的改变自己。</p>]]></content>
        <category label="荒唐言" term="荒唐言"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IMGUI 中文支持方案]]></title>
        <id>/2020/07/01/imgui-chinese</id>
        <link href="https://sheronw.github.io/2020/07/01/imgui-chinese"/>
        <updated>2020-07-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[没学过 c++，单纯想头铁汉化个东西，就查资料折腾了一下，这里做一个小的总结。如果有更好的方案请指正。]]></summary>
        <content type="html"><![CDATA[<p>没学过 c++，单纯想头铁汉化个东西，就查资料折腾了一下，这里做一个小的总结。如果有更好的方案请指正。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="加载字体">加载字体<a class="hash-link" href="#加载字体" title="Direct link to heading">​</a></h2><p>首先需要加载支持中文的字体。
网上最多的解决方案是读取外部的<code>.ttf/.otf</code>字体，亲测可用。但需要用户的目录读取权限，而且可能出现字体不存在的情况。</p><p>对于源码内嵌字体，IMGUI 的作者其实也给出了一个解决方案：<a href="https://github.com/ocornut/imgui/blob/0738611559b0a51c7fa0c376eb9601587231f841/misc/fonts/binary_to_compressed_c.cpp" target="_blank" rel="noopener noreferrer">将 binary 转换为 C array 的工具</a>。如果软件只是使用拉丁字集的话，文件不大应该也没什么问题，我打算汉化的软件本身用的也是这个解决方案，但将中文字集转换为 C Array 的话大小至少是西文字集的几千倍吧。</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ImGuiIO</span><span class="token operator" style="color:rgb(137, 221, 255)">&amp;</span><span class="token plain"> io </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">ImGui</span><span class="token double-colon punctuation" style="color:rgb(199, 146, 234)">::</span><span class="token function" style="color:rgb(130, 170, 255)">GetIO</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">IMFont</span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain"> ttf_font </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> io</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Fonts</span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token function" style="color:rgb(130, 170, 255)">AddFontFromFileTTF</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"res/simhei.ttf"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">16.0f</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> Null</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> io</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Fonts</span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token function" style="color:rgb(130, 170, 255)">GetGlyphRangesChinese</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">IMFont</span><span class="token operator" style="color:rgb(137, 221, 255)">*</span><span class="token plain"> compressed_font </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> io</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Fonts</span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token function" style="color:rgb(130, 170, 255)">AddFontFromMemoryCompressedTTF</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">SimHei_compressed_data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain">SimHei_compressed_size</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">16.f</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> Null</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> io</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Fonts</span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token function" style="color:rgb(130, 170, 255)">GetGlyphRangesChinese</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>这里解释一下，<code>GetGlyphRangesChinese()</code> 用来指定加载字符集，我需要改动的软件基于 IMGUI 1.4，所以只有这个方法，在更新的版本中，这个被加载常用汉字的<code>GetGlyphRangesChineseSimplifiedCommon()</code>和加载所有汉字的<code>GetGlyphRangesChineseFull()</code>所取代。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="汉字编码">汉字编码<a class="hash-link" href="#汉字编码" title="Direct link to heading">​</a></h2><p>如果是 c++11，直接给中文字符串添加<code>u8</code>前缀就可以了，源代码本身应该也是<code>UTF-8</code>。之前的版本可以上网找个转换函数复制下来用。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="调整-oversampling-配置">调整 OverSampling 配置<a class="hash-link" href="#调整-oversampling-配置" title="Direct link to heading">​</a></h2><p>参考 <a href="https://github.com/ocornut/imgui/issues/1434#issuecomment-344205472" target="_blank" rel="noopener noreferrer">Github 上的这个 Issue</a>。之前提到过中文字集特别占内存，而 IMGUI 的字体基于 FontAlas，至少在我这个版本（1.4）中不能动态加载，所以可能编译跑起来之后发现满屏黑白方块。</p><p>在作者提供的解决办法中，其中看起来最简单粗暴的方法是减少 OverSampling。</p><div class="language-cpp codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-cpp codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token plain">ImFontConfig config_words</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">config_words</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">OversampleV </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">config_words</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">OversampleH </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">1</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"> </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 默认为3</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">font_14 </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> io</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Fonts</span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token function" style="color:rgb(130, 170, 255)">AddFontFromMemoryCompressedTTF</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">SimHei_compressed_data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain">SimHei_compressed_size</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">16.f</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">&amp;</span><span class="token plain">config_words</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> io</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token plain">Fonts</span><span class="token operator" style="color:rgb(137, 221, 255)">-&gt;</span><span class="token function" style="color:rgb(130, 170, 255)">GetGlyphRangesChinese</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>除此之外还可以请求 Alpha Texture （超出我能力范围了 QvQ）或者手动缩小<code>glyphRange</code>，只保留自己用到的字符。</p>]]></content>
        <category label="折腾记录" term="折腾记录"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于熵的简短科普（？）]]></title>
        <id>/2020/05/18/this_is_not_entropy</id>
        <link href="https://sheronw.github.io/2020/05/18/this_is_not_entropy"/>
        <updated>2020-05-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[咱一个同学想把文科生社科生艺术生理科生（我）凑在一起聊一下这学期学到的有趣的东西，我寻思着这学期也没讲啥能够激发脑洞的东西啊……于是就找了物理基础课热力学那一章里面的东西准备讲讲，其实大部分内容都和课程本身没什么关系了。以下是粗劣的讲稿，如果有物理大佬帮我订正肯定是极好的 www]]></summary>
        <content type="html"><![CDATA[<p>咱一个同学想把文科生社科生艺术生理科生（我）凑在一起聊一下这学期学到的有趣的东西，我寻思着这学期也没讲啥能够激发脑洞的东西啊……于是就找了物理基础课热力学那一章里面的东西准备讲讲，其实大部分内容都和课程本身没什么关系了。以下是粗劣的讲稿，如果有物理大佬帮我订正肯定是极好的 www</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="熵">熵<a class="hash-link" href="#熵" title="Direct link to heading">​</a></h2><p>熵（entropy）在热力学的定义中是热量除以温度的商，所以翻译这个名词的时候就在「商」这个字的左边加了一个火字旁成为了「熵」。这个概念首先出现在热力学，以便于描述系统的稳定程度，但在今天，这个概念被很多学科借鉴并进一步应用。</p><p>通俗地来讲，这个叫做「熵」的东西指的是一个系统的混乱程度——墨水散入水中是熵增、整齐排列的积木倒塌是熵增、甚至刚开学的时候把房间收拾得干干净净、到了期末一坨稀烂也是熵增。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="热力学第二定律">热力学第二定律<a class="hash-link" href="#热力学第二定律" title="Direct link to heading">​</a></h2><p>等等，我刚刚举了几个例子都是「熵增」，难道就没有「熵减」和「熵不变」吗？</p><p>很遗憾的是，根据热力学第二定律，在一个封闭系统并且没有外力做功的情况下，熵是永远不可能减少的——你就把它放在哪里不管，熵要么增加、要么不变。只有在可逆过程中，熵才能保持不变，否则熵一定增加。</p><p>大家都老大不小了，估计也都知道这个世界上的事情大抵是不可逆的——人被杀就会死（滑稽.webp）、摔坏的杯子永远不会不会自己长回去、你也不能再度回到后悔的那个日子重新来过。所以我们在很多虚构文学和影视特效中看到的不可思议的现象，都是因为违反了热力学第二定律而不能够轻易出现在现实世界中，譬如返老还童和时间倒流。因此热力学第二定律是一个听上去十分残酷的定律，除非有外部因素做功，世界只会不断滑向混乱的那端。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="热寂说以及其局限性">热寂说以及其局限性<a class="hash-link" href="#热寂说以及其局限性" title="Direct link to heading">​</a></h2><p>那么如果将整个宇宙看作一个封闭系统，如果还没有所谓外力做功，宇宙的熵也只会不断增加直到无限大咯？因此，科学家提出了「热寂说」，认为宇宙这个系统的能量是有限的，总有一天它们会全部转换成无法利用的热能，此时熵达到最大值，并且全宇宙的温度相同。如果宇宙中不再有能量，也没有温度差，那么一切支撑这个世界运行的活动也就不复存在，宇宙就此终结。</p><p>然而，这个理论是一百多年前提出的，随着物理学的发展，不仅关于宇宙终结的假说越来越多以至于这个点子听上去没那么酷了，而且也有人质疑其合理性。我们现在已经知道经典物理学不完全适用于微观世界，那么会不会在宇宙这个尺度下，热力学也会因为某些条件不足而无法起作用呢？比如宇宙如果一直膨胀下去，那么它的密度和温度都会逐渐降低，就不足以支撑微粒之间的热碰撞，热力学就失效了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="薛定谔生命以负熵为食">薛定谔：生命以负熵为食<a class="hash-link" href="#薛定谔生命以负熵为食" title="Direct link to heading">​</a></h2><p>「宇宙」这个概念离我们似乎远了点儿，毕竟宇宙终结的时候别说我们了、连人类还存不存在还另说呢。不过我们的虐猫狂人（误）薛定谔之前写了本书叫「生命是什么」，里面倒是有些关于生命的有趣的观点。</p><p>之前咱举了「人被杀就会死」这个例子，可能你会有很多疑问——等等，人死了不就从活蹦乱跳变成了一动不动（熵减）吗？如果将「人」本身作为一个整体来看，可能「混乱程度」的确是降低了。但根据薛定谔的构想，生命每时每刻都在进行有序的机械运动，比如我们需要心脏跳动、血液流动，如果生命死亡，这些有序的运动都会消失，甚至腐烂（混乱程度增加）。</p><p>正如永动机不存在一样，我们人体也不可能孤立地进行这种有规律的活动——从最基本的来说，我们需要吃饭、喝水、呼吸，也就是生物学说的「新陈代谢」。薛定谔认为，生命需要通过「新陈代谢」与外界交换的，既不是物质，也不是能量，而是「负熵」（他在在注解中警告读者这并不是严谨的物理学定义）。生命进行有序的有机运动，就会源源不断地使这个系统的熵增加，一旦熵达到这个系统的最大值，这个生命就会迎来死亡，因此有机体需要从外界汲取「负熵」将这些生命活动产生的熵消去。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="信息熵">信息熵<a class="hash-link" href="#信息熵" title="Direct link to heading">​</a></h2><p>上文说到「熵」这个概念被很多学科使用，最出名的大概是克劳德·香农创立的信息理论（计算机科学和数学的一个分支）。<del>其实「熵」是有统计学定义的，或者说物理中的很多定义本身就是统计学定义，但咱之前没有提到。</del></p><p>信息理论中有个东西叫做「信息熵」，也就是信息的混乱程度。根据香农的定义，熵就是确定一个未知信息需要问的提问题的平均次数（一般都是「是或否」这样的二元问题）。比如 ABCD 四个出现概率均等的字符，那么我们可以先问：「是 AB 还是 CD？」然后再问「是 A 还是 B？」或者「是 C 还是 D？」这样一共需要问两次，因此信息熵为 2。当然，因为很多情况下需要的问题次数是不确定的，我们使用每种可能性的概率乘以每种可能的信息熵的和来表示。从极端的角度来讲，如果信息只能有一种可能，比如只能为 A，那么我们不需要问问题就知道它是 A，此时的信息熵为 0（也就是说没有信息量）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他">其他<a class="hash-link" href="#其他" title="Direct link to heading">​</a></h2><p>一些无意中找到的有趣文艺作品，还没有读：</p><ul><li>「万有引力之虹」托马斯·品钦</li><li>「猫的摇篮」库尔特·冯内古特</li></ul><p>一篇解释熵的科普文章：<a href="https://aatishb.com/entropy/" target="_blank" rel="noopener noreferrer">Entropy Explained, With Sheep</a></p><p>参考文献：</p><ul><li>「宇宙演化与热寂说」 俞允强（原载于「物理」杂志 40 卷）</li><li>「生命是什么」<em>第六章：有序，无序和熵</em> 埃尔温·薛定谔</li></ul>]]></content>
        <category label="荒唐言" term="荒唐言"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[利用 IFTTT 将 Toggl Report 发送到 Telegram Channel]]></title>
        <id>/2020/04/13/ifttt_toggl_telegram</id>
        <link href="https://sheronw.github.io/2020/04/13/ifttt_toggl_telegram"/>
        <updated>2020-04-13T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[【2020.11.5 更新】趣闻一则：因为 star 了 Toggl API，被一个英国的独立开发者发了 cold email，于是就花了十分钟在 zoom 上和他聊了聊，老哥似乎是想做一个使用类似 Toggl 这样的工具收集数据，然后用机器学习分析码农生产力的产品。]]></summary>
        <content type="html"><![CDATA[<p>【2020.11.5 更新】趣闻一则：因为 star 了 Toggl API，被一个英国的独立开发者发了 cold email，于是就花了十分钟在 zoom 上和他聊了聊，老哥似乎是想做一个使用类似 Toggl 这样的工具收集数据，然后用机器学习分析码农生产力的产品。</p><p>【2020.9.25 更新】现在 IFTTT 开始付费，感觉不值，散了吧散了吧（虽然 Toggl Report 的获取依然可以参考）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="主要思路">主要思路<a class="hash-link" href="#主要思路" title="Direct link to heading">​</a></h2><del>生写一个 Telegram Bot 也不是不行但我就是想找借口玩 IFTTT</del><p>VPS 或树莓派：写一个自动化的程序并定时运行，从 Toggl Report API 获取数据，整理之后 Post 给 IFTTT 的 Webhook。</p><p>IFTTT：<code>if</code> 收到服务器端的 Post <code>then</code> 发消息到 Telegram 指定 chat</p><p>Telegram：利用<a href="https://t.me/IFTTT" target="_blank" rel="noopener noreferrer">@IFTTT</a>实现 IFTTT 与 Telegram 的联动</p><p>本记录使用的是目前的 Toggl API v8 以及 Toggl Report API v2。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="获取-toggl-api-token-及-workspace-id">获取 Toggl API Token 及 Workspace ID<a class="hash-link" href="#获取-toggl-api-token-及-workspace-id" title="Direct link to heading">​</a></h2><p>登录 Toggl 网页版，进入<code>Profile Settings</code>页面翻到下面有自己的<code>api_token</code>，把这玩意儿记下来待会儿用。切换到自己想要获取 Report 的 Workspace，点 Settings，把地址栏中<code>https://toggl.com/app/{workspace_id}/settings/general</code>的<code>workspace_id</code>记下来。</p><p>还有另外一种更加麻烦的获取方式：</p><p>在命令行中输入（第一行替换自己的<code>api_token</code>）：</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token function" style="color:rgb(130, 170, 255)">curl</span><span class="token plain"> -v -u </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain">api_token</span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain">:api_token </span><span class="token punctuation" style="color:rgb(199, 146, 234)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  -H </span><span class="token string" style="color:rgb(195, 232, 141)">"Content-Type: application/json"</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">\</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  -X GET </span><span class="token string" style="color:rgb(195, 232, 141)">'https://www.toggl.com/api/v8/workspaces'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>然后在返回的一大堆 JSON 数据中中找到相应 Workspace 名字并记录其<code>id</code>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="创建-ifttt-recipe">创建 IFTTT Recipe<a class="hash-link" href="#创建-ifttt-recipe" title="Direct link to heading">​</a></h2><p>在 Telegram 中找到 <a href="https://t.me/IFTTT" target="_blank" rel="noopener noreferrer">@IFTTT</a> 的官方机器人，<code>\start</code>并授权 IFTTT 帐号，根据机器人提示关联相应的群组或频道。（如果是私密频道的话要先公开把机器人拉进来再改回去……）</p><p>在 IFTTT 中新建一个 Recipe：</p><ul><li><code>this</code> 选择 Webhook -&gt; Receive a web request，设置 event 名</li><li><code>that</code> 选择 Telegram -&gt; Send message -&gt; 信息内容只留 value1</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="编码及部署">编码及部署<a class="hash-link" href="#编码及部署" title="Direct link to heading">​</a></h2><del>IFTTT 还是不太行，对于高贵的 Apple 用户来说，整个流程都能用 workflow 来无代码无服务器实现。</del><p>咱用了 Node.js 在 Linode 上跑。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="获取-toggl-数据">获取 Toggl 数据<a class="hash-link" href="#获取-toggl-数据" title="Direct link to heading">​</a></h3><p>以每周发送本周的 Detailed Report 为例，想要在这个基础上实现其他功能可以参考其<a href="https://github.com/toggl/toggl_api_docs/blob/master/reports.md#request-parameters" target="_blank" rel="noopener noreferrer">官方文档</a>。</p><p>常用参数：</p><ul><li><code>user_agent</code>：必填，app 名或自己邮箱就行</li><li><code>workspace_id</code>：必填，即上一步我们记录的 id</li><li><code>since</code>和<code>until</code>：YYYY-MM-DD 格式，默认区间为<!-- -->[today-6 days,today]</li></ul><p>先<code>node 文件名.js</code> 在命令行里打印下原始数据，确认代码可用。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> https </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">require</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"https"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> api_token </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"你的api_token"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> workplace_id </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"你的workplace_id"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> user_agent </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"你的邮箱或应用名"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token string" style="color:rgb(195, 232, 141)">"https://toggl.com/reports/api/v2/details?user_agent="</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    user_agent </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string" style="color:rgb(195, 232, 141)">"&amp;workspace_id="</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    workplace_id</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> options </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token literal-property property">headers</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string-property property">"Content-Type"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"application/json"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token literal-property property">auth</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> api_token </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">":api_token"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">https</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">""</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">on</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"data"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">chunk</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    data </span><span class="token operator" style="color:rgb(137, 221, 255)">+=</span><span class="token plain"> chunk</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">on</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"end"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 获得所有数据</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token console class-name" style="color:rgb(255, 203, 107)">console</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">log</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="清理格式">清理格式<a class="hash-link" href="#清理格式" title="Direct link to heading">​</a></h3><p>IFTTT <del>果然不太行，</del>只能 POST 三个值，那就头铁把结果并成一个字符串吧。</p><p>先把能用得到的数据挑出来，然后整理格式。</p><p>把上面代码里的 <code>console.log(data);</code>替换成下面的内容，再打印看效果……</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> minEntries </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:rgb(255, 203, 107)">JSON</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">parse</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">reduce</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">acc</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> cur</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 选取需要的信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> description</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> start</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> end</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> project </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> cur</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> summary </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">start</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(130, 170, 255)">slice</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">5</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">10</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">start</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(130, 170, 255)">slice</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">11</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">16</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">end</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(130, 170, 255)">slice</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token template-string interpolation">    </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">11</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token template-string interpolation">    </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">16</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token template-string interpolation">  </span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">「</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">project</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">」</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">description</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">&lt;br&gt;</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword control-flow" style="font-style:italic">return</span><span class="token plain"> acc </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> summary</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">""</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token console class-name" style="color:rgb(255, 203, 107)">console</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">log</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">minEntries</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="发送至-ifttt">发送至 IFTTT<a class="hash-link" href="#发送至-ifttt" title="Direct link to heading">​</a></h3><p>进入 <a href="https://ifttt.com/maker_webhooks%EF%BC%8C%E9%80%89%E6%8B%A9%E5%8F%B3%E4%B8%8A%E8%A7%92" target="_blank" rel="noopener noreferrer">https://ifttt.com/maker_webhooks，选择右上角</a> <code>Documentation</code>，记录发送请求的 URL。</p><p>然后把之前新建的 Receipe 的 Event 名添加到你的 URL 那个空缺里，用它来发送一个 POST 请求。</p><p>把我们上一步处理完的字符串作为数据 POST 出去，然后整个编码过程就完工了（</p><p>再次运行，测试自己的频道或群聊是否收到相应消息。</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> https </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">require</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"https"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> api_token </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"你的 API Token"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> workplace_id </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"你的 Workplace ID"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> user_agent </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"你的邮箱或应用名"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> webhook </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token template-string string" style="color:rgb(195, 232, 141)">https://maker.ifttt.com/trigger/你的Event名/with/key/你url的key</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> url </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token keyword" style="font-style:italic">new</span><span class="token plain"> </span><span class="token class-name" style="color:rgb(255, 203, 107)">URL</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token string" style="color:rgb(195, 232, 141)">"https://toggl.com/reports/api/v2/details?user_agent="</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    user_agent </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string" style="color:rgb(195, 232, 141)">"&amp;workspace_id="</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    workplace_id</span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> options </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token literal-property property">headers</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token string-property property">"Content-Type"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"application/json"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token literal-property property">auth</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> api_token </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">":api_token"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">https</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">get</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">url</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> data </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">""</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">on</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"data"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">chunk</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    data </span><span class="token operator" style="color:rgb(137, 221, 255)">+=</span><span class="token plain"> chunk</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">on</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"end"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token keyword" style="font-style:italic">let</span><span class="token plain"> minEntries </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:rgb(255, 203, 107)">JSON</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">parse</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token property-access">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">reduce</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">acc</span><span class="token parameter punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token parameter"> cur</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// 选取需要的信息</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"> description</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> start</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> end</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> project </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token plain"> </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> cur</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> summary </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">start</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(130, 170, 255)">slice</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">5</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">10</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)"> </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">start</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(130, 170, 255)">slice</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">11</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token template-string interpolation"> </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">16</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">-</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">end</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation method function property-access" style="color:rgb(130, 170, 255)">slice</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token template-string interpolation">        </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">11</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token template-string interpolation">        </span><span class="token template-string interpolation number" style="color:rgb(247, 140, 108)">16</span><span class="token template-string interpolation"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token template-string interpolation">      </span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">「</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">project</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">」</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">description</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string string" style="color:rgb(195, 232, 141)">&lt;br&gt;</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token keyword control-flow" style="font-style:italic">return</span><span class="token plain"> acc </span><span class="token operator" style="color:rgb(137, 221, 255)">+</span><span class="token plain"> summary</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">""</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token function" style="color:rgb(130, 170, 255)">sendToIFTTT</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">minEntries</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token keyword" style="font-style:italic">function</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">sendToIFTTT</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> postData </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token known-class-name class-name" style="color:rgb(255, 203, 107)">JSON</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">stringify</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token literal-property property">value1</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> options </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token literal-property property">method</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"POST"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token literal-property property">headers</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token string-property property">"Content-Type"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(195, 232, 141)">"application/json"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">      </span><span class="token string-property property">"Content-Length"</span><span class="token operator" style="color:rgb(137, 221, 255)">:</span><span class="token plain"> </span><span class="token maybe-class-name">Buffer</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">byteLength</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">postData</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token keyword" style="font-style:italic">const</span><span class="token plain"> req </span><span class="token operator" style="color:rgb(137, 221, 255)">=</span><span class="token plain"> https</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">request</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">webhook</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">res</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token console class-name" style="color:rgb(255, 203, 107)">console</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">log</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token template-string string" style="color:rgb(195, 232, 141)">STATUS: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">res</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation property-access">statusCode</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  req</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">on</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token string" style="color:rgb(195, 232, 141)">"error"</span><span class="token punctuation" style="color:rgb(199, 146, 234)">,</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token parameter">e</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:rgb(137, 221, 255)">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(199, 146, 234)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">    </span><span class="token console class-name" style="color:rgb(255, 203, 107)">console</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">error</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token template-string string" style="color:rgb(195, 232, 141)">problem with request: </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">${</span><span class="token template-string interpolation">e</span><span class="token template-string interpolation punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token template-string interpolation property-access">message</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token template-string template-punctuation string" style="color:rgb(195, 232, 141)">`</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  </span><span class="token comment" style="color:rgb(105, 112, 152);font-style:italic">// Write data to request body</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  req</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">write</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token plain">postData</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain">  req</span><span class="token punctuation" style="color:rgb(199, 146, 234)">.</span><span class="token method function property-access" style="color:rgb(130, 170, 255)">end</span><span class="token punctuation" style="color:rgb(199, 146, 234)">(</span><span class="token punctuation" style="color:rgb(199, 146, 234)">)</span><span class="token punctuation" style="color:rgb(199, 146, 234)">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#bfc7d5"><span class="token plain"></span><span class="token punctuation" style="color:rgb(199, 146, 234)">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="定时运行">定时运行<a class="hash-link" href="#定时运行" title="Direct link to heading">​</a></h3><p>利用 Crontab 实现每周日晚上 23:59 运行该程序<del>，请使用命令<code>date</code>查看 VPS 所在地区的时间</del>。</p><p>命令行中输入<code>crontab -e</code>，然后添加一行：</p><div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#bfc7d5;--prism-background-color:#292d3e"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#bfc7d5"><span class="token number" style="color:rgb(247, 140, 108)">59</span><span class="token plain"> </span><span class="token number" style="color:rgb(247, 140, 108)">23</span><span class="token plain"> * * </span><span class="token number" style="color:rgb(247, 140, 108)">0</span><span class="token plain"> </span><span class="token function" style="color:rgb(130, 170, 255)">node</span><span class="token plain"> /home/你的用户名/到程序的路径</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="其他想法">其他想法<a class="hash-link" href="#其他想法" title="Direct link to heading">​</a></h2><p>这么一套搞下来，觉得用 IFTTT 的自动化还是挺鸡肋的，工作量近似于自己搞一个 Telegram Bot ，POST 还有参数限制。</p><p>不过动手搞的过程中想到了很多脑洞：</p><ul><li><em>因为 Toggl API 还可以输出 PDF 格式的 Report，所以可以用类似的原理来自动化储存 Report 至云端（IFTTT）？</em></li><li>可以用 IFTTT 实现 Google Assistant 和之前写的 Expire Soon Bot 的联动</li><li>IFTTT 只适合轻量级的自动化，比如 Spotify 收藏新歌或者 Github 开新坑之后分享到频道这样的。但从另一个角度来说，其简单易用性能让非程序员也能玩得开心，相比之下 Workflow 虽然功能强大，但对于不熟悉程序的人来说上手成本太高了（</li></ul>]]></content>
        <category label="折腾记录" term="折腾记录"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[以学年总结为题的未来展望]]></title>
        <id>/2019/05/21/bye_sophomore</id>
        <link href="https://sheronw.github.io/2019/05/21/bye_sophomore"/>
        <updated>2019-05-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[在大二学年的末尾，我觉得自己又多上了两年高中。]]></summary>
        <content type="html"><![CDATA[<p>在大二学年的末尾，我觉得自己又多上了两年高中。</p><p>大一我没有像以前那样装模作样地写一篇学年总结，唯一写过的东西大概是一条朋友圈，大意是「今年就像做梦一样幸福希望明年也能够继续这样的生活」，而大二也如愿以偿地，基本上就是大一生活的延续——一整个学校都没有我讨厌或者讨厌我的人、有每天能见到的有男有女的三五好友、小圈子里她喜欢他喜欢她的捕风捉影的绯闻、虽然也努力学习但没有名为「高考」的压力、出成绩之后同学之间的商业互吹和自贬……</p><p>虽然听上去有些滑稽，但初中时向往的「玫瑰色的高中生活」正是如此。</p><p>我想我是很幸福了，真的很幸福，只是偶尔会在大家聊得最开心的时候突然呆住，然后质疑自己想要的是不是就是这种生活——</p><p>可能就是「绝美之城」里的 Jep 提到的「中带」（La Fess）吧。</p><p>当然我并不是要全盘否定自己过去的两年，也不是说要从现在的圈子中淡出，但在这被戏称为「与世隔绝的考研读博预备军学校」的地方，一切的一切似乎都在教学生如何在象牙塔中生存，当然这条路也并非外人想得那样一帆风顺。可是，我并不像我的好友那样对象牙塔、或者「科研事业」「做学问」有着狂热的兴趣。对他们来说，读研、甚至直接读博，并不是选择，而是理所应当的。而我虽然也在装模作样地帮教授打着杂，但我打心底明白，这不是那种能够激发我的兴趣、让我不受安排就会去做的事情。</p><p>我高三只申了一所 LAC，还是带奖没指望能录的那种，结果阴差阳错就来了这里，从一开始就与大家多多少少格格不入，甚至有些跪舔的心态。但大家都是很善良的人，愿意包容我并和我做朋友，我也的确成长了许多。</p><p>不过，是时候作出一些改变了。</p><p>下文是一些在我的大学前两年没有做到、但自认为明年有必要试着去做的杂七杂八的事情，以总结和规划结合的方式展开叙述。</p><h1>总体规划</h1><p>意识到自己大概率不会去搞科研之后，我决定通过 combined plan 转到某大学的工院。和负责人聊了之后才发现，因为前两年过于努力（不是），只要再上两节物理导论就够了，于是我的大三变得十分自由。</p><p>按照惯例，努力勤奋的中国学生都会在这里先修个数学专业再走，但学了很多门数学课之后我意识到，自己并没有那个能力将数学学好，即使能够靠应试技巧（这是我在中国的高中学到的）应付完作业和考试，考完期末考试也会把它们全部忘掉，并且不会想碰第二遍，所以我无法学到令我满意的程度——靠死记硬背、甚至作弊来痛苦地学数学、只想修一个毕业证的也大有人在，但我认为这毫无意义。</p><p>所以明年一整年，我会选尽可能少的课，选一些之前想都不会想的人文社科类课程（历史绘画戏剧乐理之类的），然后利用好 LAC 的福利，尽可能多地做自主规划的课程（学校现成的 cs 课少得可怜）。</p><p>下学期的课全部被我有意地排在了一三五。这样，我可以在周一、周三、周五专心学习课内的知识并完成作业，周六休息一天不做任何事情，周二、周四、周日可以安排固定时间来自学——学习只有在大学才有时间和精力学习的「软技能」，预习工院中比较难懂的理论类课程，还有我比较感兴趣的前端类和设计类知识。</p><h1>跳脱同温层</h1><p>我在刚入学的时候，深切体会到了自己和同学之间的差异（原生家庭、生活圈子、人生规划 etc.），并且因此自闭了好久。但两年下来，作为一个（前）自闭儿童还是有了那么几个朋友。现在将自己与在初高中认识的人相比，又觉得自己好像和他们也有了不小的差异。就因为这样，我决定对现在的圈子保持警惕——一旦与他们渐渐熟络，我的思想也会被他们同化，因此需要接受一些与他们不同的信息源。用之前不知道哪里看的人生经验帖的话来讲，就是「看周围的人肯定不会看的东西」。</p><p>首先，LAC 人少专业杂，我可以轻易认识各种与我专业差异很大的同学，与他们聊天，得到一些意想不到的观点和思路。</p><p>其次，为了能够了解到除了 LAC 之外的大学生都在做些什么，我开始试着和与我有不同教育背景的前同学交流，然后在网路上默默视奸一些我觉得有趣的同龄人 or 大佬<del>，没有跟他们搭话还不是因为社恐，能够看到这篇文章的人请务必来骚扰我并和我做朋友(つ ω`｡)</del>。</p><p>至于信息源，我觉得很难在「自己认为有趣的内容」和「不会让自己陷入回声室效应的内容」之间取舍，因为我觉得有意思的内容，和我类似的人也很有可能觉得有意思。一个解决方法是寻找一个足够优质、能够综合多个领域、并且精简的信息源，如果有人发现了可以给我推荐下？不过因为上文提到过的差异，我平时关注的信息源和我身边的好友都不太一样，一些本来在我的信息流中刷不到的消息都会通过他们传到我这里来。</p><p>还有就是，周二周四因为没课所以应该会宅在宿舍里，这样也会减少与周围人的一些交流。</p><h1>拒绝内卷学习</h1><p>「内卷学习」这个梗好像是当初在知乎某个关于衡中的答案里找到的，大意是那种无视效率和健康的「既然学不死 就往死里学」。</p><p>在上高中之前，我是没有认真学习过课内的知识的，课外探索的一些东西，不管是看书，还是写东西，还是做电子杂志网站之类的都属于单纯的个人兴趣探索（现在想想这才是最理想的学习状态）。</p><p>然而高中之后，好像周围所有的人采用的都是衡中式的「内卷学习」法，于是我也被卷入了这种潮水中。就如之前我写过的读书笔记「<a href="https://sheronw.github.io/2019/03/27/make_it_stick/" target="_blank" rel="noopener noreferrer">我果然一直都在无效学习</a>」中说的那样，做出一副每时每刻都在好好学习的样子，相信自己可以靠一点睡五点半起来取得好成绩，把时间用来不断地反复理解或记忆表层的内容，然后觉得自己应该掌握了，然后直接跳到下一个知识点。</p><p>题外话，高中收获的唯一有益的建议应该是出自高一时的物理老师（虽然年逾花甲但还是超漂亮呀，感觉年轻的时候一定是一个超级大美女）：如果做不出来题就出去跑几圈回来。</p><p>因为我放弃了高考，高三的实际学习时间并没有高一高二那样多，大多数时间都在城市里闲逛、看闲书、保持充足睡眠，结果却得到了对我来说还算不错的成绩。但那个时候我仍然还是憧憬着「内卷学习」，还经常为自己学习时间不够而自责（。</p><p>在大学学习的这两年，我意识到了所谓「真正的知识」与「应试教育需要的技巧」的差异，而「内卷学习」显然不能够满足我现阶段的要求。</p><p>就因为我这两年其实做得也不怎么样，所以以下皆为计划：</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="睡眠质量-睡眠质量">睡眠质量 睡眠质量<a class="hash-link" href="#睡眠质量-睡眠质量" title="Direct link to heading">​</a></h2><p>我觉得我睡眠质量极差。可能是天生的吧，因为我也不知道为什么。从很小的时候我就需要在床上躺个一个小时以上才能真正睡着（大部分时间都在意淫赢取白富美出任 CEO 走上人生巅峰了），而且从来不觉得有什么不对的（哪怕是熬到很晚很困也是这样）。而且下半夜总会醒一次，从四点到七点总是处于半梦半醒的那种很低效睡眠的状态。</p><p>然后学期末清空宿舍，一天之内扛着东西往返住家好几趟，当晚洗了把脸就直接瘫倒在床上了，睡得很快，只是下半夜还是醒了一次。于是下学期的计划是，要在周日、周二、周四（就是自主安排学习的日子）的下午保证一小时运动（作为一个死宅每天运动还是太勉强我了，先从一周三次开始吧）。<del>每天早上要是有时间就做一套养生气功八段锦？？？</del></p><p>还有一个是保证充足的睡眠时间，毋庸置疑。我从小没有午睡的习惯，中午一旦因为某种原因睡着就会一睡不醒荒废一下午，所以我晚上需要比别人多睡一个小时。大一的时候还能保证十点半睡七点起，大二不知怎么着拖着拖着就十二点了……但还是七点多起，所以白天很容易出问题，下学期要更正回去。要是睡不着就不要干躺着，爬起来做一些诸如写日记之类的轻负荷活动<del>，比如把意淫的人赢小剧场给写下来做成 galgame 呀</del>。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="保证最优学习时间">保证最优学习时间<a class="hash-link" href="#保证最优学习时间" title="Direct link to heading">​</a></h2><p>回想起高中的时候，最痛苦的莫过于早自习——六点多刚跑完步，还没吃早饭，就坐在教室里硬熬，全部精力都用在保持自己别睡着被值班老师逮着了，这个时候要是真的学习你跟我开玩笑？</p><p>——所以上了大学之后我发誓，状态不好就别硬撑着，都二十岁了，知道自己不能成就一番大事业了，干嘛头悬梁锥刺股的。</p><p>首先，根据这两年的实验以及观察，我并不是那种「深更半夜灵感如泉涌」的人。在保证十点半睡七点起的前提下，自己能够空出来的有效时间应该是上午 9:30AM-12:00AM，下午 2:00PM-5:00PM，晚上 7:00PM-9:00PM。一般来说，下午的状态会好一些。除了这些时间之外，就干脆不学了。</p><p>（一个有意思的现象是，吃完饭后的一个小时，尤其是摄入大量碳水之后，会出现大约半小时的低效率状态。按照我的作息时间大概是 9:30AM-10:00AM 和 1:30PM-2:00PM 左右，这个时候安排不了专注度需求比较高的事）</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="要么集中精力-要么干脆不学">要么集中精力 要么干脆不学<a class="hash-link" href="#要么集中精力-要么干脆不学" title="Direct link to heading">​</a></h2><p>虽然我对李笑来这种人生导师的鸡汤持批判性态度，但他有句话我觉得说得有点道理：其实一般人每天坚持学一个东西学两个小时，时间长了也能够在这方面出类拔萃。</p><p>两个小时听上去很小，但想想其实「心无旁骛地学两个小时」其实并不是很容易，据我所知的大部分人，都是学着学着就开始玩手机或者聊天，虽然一下午都在学习但并没有学多少罢了。我虽然自认为还算比较注意，但有的时候也会发现自己浪费了很多学习时间。</p><p>也就是说，自己的所谓「学习时间」并不是完全有效的。所以接下来的目标是，在做事情的时候保持专心致志，多休息几次、或者少学一会儿也可以的。</p><p>有两个方案有待尝试；第一个就是所谓的什么番茄时钟，简单粗暴一刀切；另一种方法就是把任务分解成许许多多的小目标，然后全力以赴完成一个就休息一次。</p><h1>培养可转移技能</h1><p>「可转移技能」其实就是个营销号骗职场新人的名词，我不管这个词一开始是什么意思，在这里简单粗暴地将所有我认为需要掌握的非专业技能都归类其中。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="交流">交流<a class="hash-link" href="#交流" title="Direct link to heading">​</a></h2><p>我，社恐。刚上大一的时候别说和有语言隔阂的美国人聊天了，连中国来的留学生都不敢搭话，后来渐渐地好了一点，然后渐渐地也能够和别人用英语来交流了。幸亏是在个小村子里呆着，从来没因为自己英语垃圾被歧视过，感谢就是那些一看就是典型中产阶级功德圆满闲得没事也耐心的老太太老大爷。</p><p>当然我自认为也算是付出了一丁点儿的努力，比如我大一的时候因为太过讨厌自己就直接在写作部门找了个人美心善的教授每个周专门腾出一个小时的时间就光陪我尬聊，有的时候也会去找那些要去亚洲支教的同学给他们当小白鼠。</p><p>不过我的确意识到了，能够跟别人好好说话是一种虽然不强求、但仍然需要具备的技能。而且认识各种不同的人可能的确也很有意思吧，总之接下来的一年也要加油。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="写作">写作<a class="hash-link" href="#写作" title="Direct link to heading">​</a></h2><p>我觉得国内的语文教育都太把文学当回事了，我不是说文学不好，而是「阅读」和「写作」应该是一个更宽泛的概念，不仅能够用于学习文学或者写文学作品上。</p><p>所以明年的目标是，多写。一方面，写那种能够把一件事情给讲清楚的文章，比如学习笔记、阅读笔记；另一方面写一些总结，比如我现在正在写的不知道是什么东西的东西。</p><p>如果学校有相关的非学术写作的课程的话，我应该会乐意去上；如果没有的话，就想办法搞一个自主学习的课程吧，争取每个周些一篇出来（目标是不是有点太大了）？</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="知识的应用能力">知识的应用能力<a class="hash-link" href="#知识的应用能力" title="Direct link to heading">​</a></h2><p>至少现在对我来说，有网络，有图书馆，基本上想要搜索到感兴趣的领域中优质的学习资源基本上是分分钟的事情，基本上不用一个下午就能大概明白想入门都需要学哪些内容、需要做什么。并没有学习资源不足的问题，甚至可能是过于丰富反而把时间浪费在纠结上了。</p><p>那么，接下来的主要问题就是想办法将这些资源有效利用了。感觉这个问题要是展开足够写一本书，目前为止除了熟能生巧之外，运用类比和推理，将某个学科的知识抽象化并用于其他方面也是一个有趣的方向。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="有效学习">有效学习<a class="hash-link" href="#有效学习" title="Direct link to heading">​</a></h2><p>我觉得自己和周围的大佬们比就是垃圾，无法弥补的那种。</p><p>于是我的面前有两种选择，第一种是和大佬在相同的时间内学习同样的内容，但只是流于表面；第二种是少学一点，把能学的都学懂。</p><p>现在想来，国内大学的问题，比如死板的课程规划，绕不过去的马哲毛概，在这里都不是问题，那为什么还要按照国内的逻辑来学习，只是不择手段地刷绩点呢？</p><p>有人可能会反驳了：这些知识你虽然忘记了，但其实都存在你脑子里面，能派上用场的时候自然会点醒你的。</p><p>别别别，我现在就想用，但它并没有跳出来点醒我。</p><p>所以，接下来要保证的是，不论是学习一门课程，还是看一本书，都要慢下来，按照流程走一遍——</p><ol><li>在授课，或者阅读之前，预先思考相关内容，带着问题去学习</li><li>走心地记笔记，我指的是用自己的话来复述的那种</li><li>定时在脑内回顾所学的知识</li><li>多练习，并且得到反馈</li></ol><p>我知道会很慢，至少达不到之前一学期上四门课并且读至少十本书的速度。但因为这一年是一个千载难逢的能够慢下来、培养学习习惯的好机会，我不想浪费它。</p>]]></content>
        <category label="荒唐言" term="荒唐言"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[齿轮化的我们]]></title>
        <id>/2019/03/30/gear_world</id>
        <link href="https://sheronw.github.io/2019/03/30/gear_world"/>
        <updated>2019-03-30T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[读英语言文学专业的同学写的小说，里面某个人物说了这么一句话：]]></summary>
        <content type="html"><![CDATA[<p>读英语言文学专业的同学写的小说，里面某个人物说了这么一句话：</p><blockquote><p>I don’t think about what the world really is like. I learn a skill and I make a living out of that skill.</p></blockquote><p>这让我想起了在『现代社会』的『中国』遇到的很多人。就是几乎『全盘接受普世价值观』，有点精致利己，但往好里夸能算作努力上进，但就没什么同理心，尤其是对和自己没有关系的人和事物。然后莫名其妙就写了一堆其实和这篇小说本身并没有什么卵关系的感想。</p><p>首先是关于『现代社会』。我感觉我认识的很多人，其实都把自己给『齿轮化』了。假设世界，或者社会是一个很大的机器，那么其中的很多人就将自己当作这个机器上的一个齿轮（或者螺丝钉也行）——这并不是说他们麻木，因为他们当中的很多人也想要成为一个好的齿轮，或者能够到这个机器更重要的部分中去当一个齿轮；这也并不是说他们眼界狭隘，只能看到自己作为齿轮对这个机器的贡献，因为『努力成为一个好的齿轮』就已经占据了他们的全部身心和精力了，即使有点空闲也去做一些轻松愉快的事情了（比如哲 ♂ 学），因此很难从『齿轮』这个思维定势中跳脱出去考虑一些别的事情，比如整个机器本身。</p><p>这种想法是人类对于日益复杂、信息爆炸的社会所做出的一种很正常的应激反应。</p><p>我对希腊城邦什么玩意儿的不太熟悉，但假设在几千年前，在希腊有个城邦。城邦里面就那么几个人，每个人一辈子能够有交流、有交集的人也就那么几个，每个人所做的事情（也就是说职业）也就那么几种，远远没有达到高度细分，而且那个时候 labor market 也没那么发达，基本上每个人都算是『全才』。在那个时候，其实人们心中的『世界』，或者说是『社会』，其实是一种很简单很好理解的东西，再加上也没有那么多信息（不管是有意义的还是没有意义的）来占据人们的空闲时间。在这个时候人们考虑一些关于『社会的』东西，其实是并不难的，所以城邦据说是一个还算比较民主的社会，人们能够通过投票啊什么乱七八糟的决定一些日常事务。</p><p>但是，工业时代以降，社会已经高度复杂化了，随便举几个例子：工种的高度细分，如 metropolitan 在内的超级系统。这个时候一个人想要看清整个机器的全貌、了解机器的每个组成部分已经是不可能的了。我觉得 computer science 中的 interface 是一个很了不起的概念，大概就是计算机硬件和软件的每一个组成部分都是一个 black box，你输入 input，然后它会得到 output。我觉得这个思想一定不是只在 cs 里面才有，或者说是可能 cs 其实就是借鉴了这个思想才得以繁荣，因为现代的计算机本身就是一个十分复杂、超出人类认知极限的一个系统。现代社会在很大程度上也是被这么封装起来的。因为看到全貌太过复杂而以至于不可能，因此对于大多数齿轮来说，它看到的机器除了自己能够理解、能够接触到的部分之外，其实就是很多个黑盒子，它知道对于某些黑盒子，它给与 input，就能得到某些特定的 output。只要能够掌握这些黑盒子的使用方法，然后理解好自己作为一个齿轮的职责并完成这些职责，它就心满意足（或者是竭尽全部精力）了。</p><p>更糟糕的是，信息时代又带来了更多的问题，比如信息过载以及回声室等等。首先，它能够提供用户想要的内容，而且是怎么刷都刷不完的瀑布流，这就导致了很多齿轮将自己的关注点全部放在了自己最关心的那一部分，观察整个机器本身变得更难。其次，为了从（无法辨别真假的）信息洪流中保护自己不至于崩溃，很多人干脆切断了很多信息获取渠道，或者说是，对很多事情漠不关心。</p><p>然后是关于『中国的』。我没怎么跟美国人聊过天，但他们对于政治的关注点显然比我在中国时遇到的同学要多得多。我一直对『他们为什么对很多事情漠不关心』这个问题感到很疑惑。因为我这学期闲着没事去上了个中国政治课，读了一些 reading，这里有一种可能的解释：</p><p>其实在 Mao 的时代，整个中国都是高度政治化的，然后在 CR 中达到高峰。Mao 的思想在很大程度上都是在发动广大人民群众，那个时候每个人都谈政治，甚至可以说是『不得不谈论政治』，甚至很多知识分子和技术人员，都要将日常生活或者科研的时间抽出来一部分用来应付政治。</p><p>之后的事情更像是一些矫枉过正，或者说对那个年代的事情避而不谈。80 年代的改革派为了更好地发展经济，试图将政治这种事情从日常生活中消除，希望人们能把更多的精力放在私人生活（促进消费和商品化）和研究自己的专业技能（促进现代化）上来。</p><p>但现在的问题是，之前我们破坏掉了代表着封建乡绅与农民二维对立的儒家思想，换成了马列主义毛泽东思想，但 80 年后他们又被小心翼翼地替换成了有利于市场经济的某种意识形态，外加上一些外来的思想，其实这几代人对于『这个社会』是很迷惑的，再加上大环境不鼓励，那么还不如冷漠一点好。</p>]]></content>
        <category label="荒唐言" term="荒唐言"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[我果然一直都在无效学习]]></title>
        <id>/2019/03/27/make_it_stick</id>
        <link href="https://sheronw.github.io/2019/03/27/make_it_stick"/>
        <updated>2019-03-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[高中的时候，由于被整个大环境洗了脑，我拿出了前所未有的干劲，开始随着全日制高中每一个小时都被安排好的作息，做出一副每时每刻都在好好学习的样子，但我很快就意识到，自己对所谓『知识』的掌握程度并不好，以至于到底学到了什么，我自己也说不出来。虽然隐约地觉得自己的学习方式可能出了些问题，但那时的我更认为自己只是还不够努力，只要没有学到死就没有资格去考虑这个问题，至于那些取得好成绩的同学，我统统将他们纳入天赋异禀的范畴。]]></summary>
        <content type="html"><![CDATA[<p>高中的时候，由于被整个大环境洗了脑，我拿出了前所未有的干劲，开始随着全日制高中每一个小时都被安排好的作息，做出一副每时每刻都在好好学习的样子，但我很快就意识到，自己对所谓『知识』的掌握程度并不好，以至于到底学到了什么，我自己也说不出来。虽然隐约地觉得自己的学习方式可能出了些问题，但那时的我更认为自己只是还不够努力，只要没有学到死就没有资格去考虑这个问题，至于那些取得好成绩的同学，我统统将他们纳入天赋异禀的范畴。</p><p>直到这个春假忙里偷闲地看了本叫做『<a href="https://books.google.com/books/about/Make_It_Stick.html?id=t9JoAwAAQBAJ&amp;source=kp_book_description" target="_blank" rel="noopener noreferrer">Make It Stick</a>』的书，自己隐约的猜想才算成了现实——是的，我之前接近二十年的人生中，很多时候的所谓『学习』都是无效的，为什么？因为没有动脑。现在想来，正如高中的我相信自己可以靠一点睡五点半起来取得好成绩一样，其实只是自己感动自己罢了——因为认真地去分析、去记忆很累，因此把时间用来不断地反复理解或记忆表层的内容，然后觉得自己应该掌握了，然后直接跳到下一个知识点。</p><p>这本书里面提到了一个叫做 effortful learning 的概念，其实这东西没什么可解释的，就是动脑子学的意思，基本上是个学生可能都能明白『真正动脑子学』是什么意思。我先解释一下为什么很多人都做不到 effortful learning，然后再直接上方法论，至于 effortful learning 的益处暂时略去不谈，一些心理学和神经科学的原理我也不解释了。另外，书中针对教育者（父母、老师、培训机构等）也有一些针对性的建议，这里也略去不谈，以下内容主要针对像我这样的（苦逼）学生。</p><h1>为什么会无效学习</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="有效学习的缓慢与困难">有效学习的缓慢与困难<a class="hash-link" href="#有效学习的缓慢与困难" title="Direct link to heading">​</a></h2><p>印象中第一次接触到所谓的『有效学习』，是在初中快会考的时候，历史老师建议我们晚上睡觉前把眼一闭，想一想自己这一天都学了什么，还有哪些需要学习或者改进的（其实就是之后我会提到的 retrieval 和 reflection）。我想了想好有道理诶，然而坚持了一天就放弃了。</p><p>原因很简单，浪了一整天之后，晚上躺在床上的时候就已经很累了，回忆当天学了啥真的太难了，要很努力才能回忆起来，还不如看会儿<del>里</del>番放飞自我。</p><p>于是我用自己的亲身经历告诉了大家 effortful learning 有多困难。但是事实上，当你在努力回忆今天学了什么的时候，即使最后也没法全想出来，也是对学习很有利的。或者说，如果你回忆或者复习的时候越吃力，其实学到的东西就更多，真正掌握知识的学习曲线是很陡峭的。</p><p>可惜大多数人（比如我）都只是大概扫一眼，从来不在脑子里自己过一遍知识，把整个思考过程都复原一遍，因为『这么思考下去太慢了，肯定做不完作业』，想着『啊我觉得我应该会了吧』，就开始盲目地练习一些比较简单的题，如果会做更加引证了自己会做的假象，不会做就抄抄课本和笔记，照葫芦画瓢也能做出来，想着『那就考试之前看一下笔记吧』，也就这么搁置了下去。</p><p>除了学习曲线缓慢之外，effortful learning 的过程中还有很多困难，比如下课之后回忆起之前课上讲过的内容，就会发现自己很多内容都不记得了，或者说认认真真做题不看课本的时候发现自己很多概念并不理解所以并不会做之类的。</p><p>不过这个也不用太担心，因为不断地试错，即使最后都没做对，同样有利于学习。</p><p>这里灌一下原书提到的一段鸡汤：</p><blockquote><p>People who believe that their intellectual ability is fixed from birth, wired in their genes, tend to avoid challenges at which they may not succeed, because failure would appear to be an indication of lesser native ability.
By contrast, people who are helped to understand that effort and learning change the brain, and that their intellectual abilities lie to a large degree within their own control, are more likely to tackle difficult challenges and persist at them. They view failure as a sign of effort and as a turn in the road rather than as a measure of inability and the end of the road.
如果一个人相信自己的智力是与生俱来、嵌在基因里的，那么他会倾向于避免他们可能做不到的挑战，因为失败就代表着他们的先天能力不足。
与之相反地，如果一个人经过指点，明白努力和学习可以改变自己的大脑，并且自己的智力在很大程度上都是可以受自己控制，那么他就会更可能解决困难的挑战并在这上面坚持下去。他们将失败看作努力的证明或是一个转折点，而不是无能的标志或是死路一条。</p></blockquote><h2 class="anchor anchorWithStickyNavbar_LWe7" id="知识被掌握的假象">知识被掌握的假象<a class="hash-link" href="#知识被掌握的假象" title="Direct link to heading">​</a></h2><p>只要说到复习，我做出的实际行动其实永远只有一项——『看错题和笔记』，真的只是来来回回地看，看到觉得自己好像已经背下来了就停下。其实我也知道最好的方式是重新做一遍，但想了想觉得自己既然已经重新做过一遍了，那么应该就不用再做、只要看看错在那里应该就会了。</p><p>于是我又中枪了——事实证明反反复复阅读笔记和文本是效率最低下的复习方式，因为缺少更深层的思考，很多时候我们只是掌握了『文本』，而不是『知识』本身。</p><p>更糟糕的是，这种『付出努力』的错觉，更加强化了我的错误认知，让我自己认为自己对于知识的掌握已经很熟练了，然后陷入了死循环。</p><p>心理学中的 Imagination Inflation 说的就是这种情况，如果一个人幻想过发生了某事，那么最后他真的会把它当真。我幻想反复阅读文本就能掌握知识，结果最后自己真的相信我已经把这些都学会了。</p><p>想要打破这种幻象，就要给自己设定一些指标，然后检查自己是否能够达到这些要求。对于一些没有硬性指标的抽象内容，可以时不时进行自测，或者和同学相互交流学习的内容。</p><h1>如何做到有效地学习</h1><p>以下内容全部出自原书第八章。其实很多技巧我们都早已知道，只是由于思维惰性却迟迟不去实践。虽然开始改变很难，并且没啥成就感，但贵在坚持。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="practice-retrieving-new-learning-from-memory">Practice Retrieving New Learning from memory<a class="hash-link" href="#practice-retrieving-new-learning-from-memory" title="Direct link to heading">​</a></h2><p>有的时候，学到的知识其实已经储存到我们的大脑里了，只是我们仍然无法在需要的时候熟练调用。因此我们要为『调用』这个过程进行足够的练习。</p><p>首先，在学习，尤其是容易出现掌握假象的阅读笔记和文本时，要时不时停下来考虑以下几个问题：</p><ul><li>这些文本的要点有哪些？</li><li>其中有哪些我不熟悉的术语？如何定义它们？</li><li>其中有哪些我不熟悉的观点？如何把它们和我已知的内容连系起来？</li></ul><p>其次，<del>虽然大家都知道，</del>不要满足于翻来覆去地看课本和笔记，所有的知识最好都在脑子里自己重构一遍，并且课后习题做起来（除了练习 retreving 之外，也可以作为自己掌握程度的指标）。</p><p>当然，不要忘了每个周、每个月还有考试前温习学过的内容。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="space-out-your-retrieval-practice">Space Out Your Retrieval Practice<a class="hash-link" href="#space-out-your-retrieval-practice" title="Direct link to heading">​</a></h2><p>首先，从真正掌握知识的角度上看，考前临时抱佛脚什么的绝对不可取，记得快忘得更快。因为知识需要时间来巩固，因此将知识分块，中间给予时间间隔的话学习效果更好。</p><p>对名词和脸来说，学完了如果不立刻复习的话很容易忘记。对于文本类的话，当天也要复习一次，一个月后一定要重新复习。</p><p>对于自己已经掌握的内容，也依然要复习。可以使用 Leitner Box 来管理自己掌握程度不同的知识。</p><p>不要总是学一种科目，在不同的科目间切换效果会更好。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="interleave-the-study-of-different-problem-types">Interleave the Study of Different Problem types<a class="hash-link" href="#interleave-the-study-of-different-problem-types" title="Direct link to heading">​</a></h2><p>比起一口气突击一个知识点并进行盲目的单项训练，同时学习几个知识点，并且比较它们的相同点和不同点更好。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="other-effective-study-strategies">Other Effective Study Strategies<a class="hash-link" href="#other-effective-study-strategies" title="Direct link to heading">​</a></h2><h3 class="anchor anchorWithStickyNavbar_LWe7" id="elaboration">Elaboration<a class="hash-link" href="#elaboration" title="Direct link to heading">​</a></h3><ul><li>试图用自己的话来总结所学知识</li><li>将所学内容与生活联系起来</li><li>寻找新知识与已知知识的关系</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="generation">Generation<a class="hash-link" href="#generation" title="Direct link to heading">​</a></h3><p>其实就是在学习之前预先进行思考。比如在阅读文本前，先思考一下作者会针对这个 topic 讲哪些观点。做题的话，即使知道自己可能做不出来，也要在看答案之前自己做一做。学习理科的时候可以在课前根据已经有的知识试着做一下这一章节的题目。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="reflection">Reflection<a class="hash-link" href="#reflection" title="Direct link to heading">​</a></h3><p>回顾最近的学习内容并思考以下问题：</p><ul><li>哪些是自己做得比较好的？哪些还需要改进和温习？</li><li>这些知识能够联想到哪些别的内容？</li><li>自己还可以做哪些？</li></ul><h3 class="anchor anchorWithStickyNavbar_LWe7" id="calibration">Calibration<a class="hash-link" href="#calibration" title="Direct link to heading">​</a></h3><p>寻找一些标准来确认自己对于知识的掌握内容程度。之前已经说过。如果有标准的话就和标准比较，如果没有的话就自己测试，比如课后的习题，自我回顾等等。</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="mnemonic-devices">Mnemonic Devices<a class="hash-link" href="#mnemonic-devices" title="Direct link to heading">​</a></h3><p>这就比较骚了，只要搜索『记忆方法』就能找出一大堆，这里不赘述了。</p>]]></content>
        <category label="阅读笔记" term="阅读笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2018年度书单]]></title>
        <id>/2018/12/31/2018booklist</id>
        <link href="https://sheronw.github.io/2018/12/31/2018booklist"/>
        <updated>2018-12-31T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[我觉得我今年没怎么读书，准确来讲是没逼着自己读书，结果就是读了好多虚构类(其实就是小说……)]]></summary>
        <content type="html"><![CDATA[<p>我觉得我今年没怎么读书，准确来讲是没逼着自己读书，结果就是读了好多虚构类(其实就是小说……)</p><ol><li>《人月神话》 Frederick P. Brooks, Jr.</li><li>《China's Urban Billion》 Tom Miller</li><li>《生命是什么》 薛定谔</li><li>《黑暗时代的她们》 杰奎琳 罗斯</li><li>《欢乐英雄》 古龙</li><li>《觅渡》 梁衡</li><li>《白》 原研哉</li><li>《激荡三十年 ：中国企业 1978-2008》 吴晓波</li><li>《激荡十年，水大鱼大 2008-2018》 吴晓波</li><li>《呐喊》 鲁迅</li><li>《直到最后一句》 卢丽莉</li><li>《布鲁克林有棵树》贝蒂 史密斯</li><li>《人类简史》 尤瓦尔 赫拉利</li><li>《未来简史》 尤瓦尔 赫拉利</li><li>《爱上她的 12 种方法》 入间人间</li><li>《后羿》 叶兆言</li><li>《红玫瑰与白玫瑰》 张爱玲</li><li>《文心》夏沔尊 叶圣陶</li><li>《下流社会》三浦展</li></ol><p>八本虚构类文学里面，《后羿》和《直到最后一句》都是二刷，而且还是明明知道评价不怎么样但是因为各种各样的共鸣感还是去二刷了的那种，不评价。</p><p>梁衡的散文集真的是因为被写瞿秋白和项羽的那篇给惊艳到了(毕竟是喜欢了一整个中学时代的文章)才买的，之后发现文笔不错官腔太多，不太喜欢。</p><p>忘了在哪儿听说了红白玫瑰就去图书馆借了本张爱玲，对这种小布尔乔亚不太感兴趣，但这个两性关系的研究是真滴巧妙，虽然我我不知道为什么一看到男主内心戏就觉得膝盖中枪，读完赶紧借了本同时代的鲁迅。</p><p>入间人间那本还是电波系，一个男的被另外一个男的和自己喜欢的妹子虐狗，没有之前 660 有意思。</p><p>布鲁克林里面人名太难记，不过毕竟是几十年前的美国鸡汤，平平淡淡读着挺舒服的。</p><p>《欢乐英雄》受众比较广也不烧脑，而且我就是喜欢古龙比金庸更多一些。但这个开头写的真他娘的好，可以算是心中小说最佳开头 top3 了。</p><p>非虚构类，《人月神话》差不多算是软工专业书了，其实这书是去年年初购入的，当初好像是在知乎看到这个推荐就入了。成书年代久了点儿，许多内容没有那个时代的专业背景感觉还是看不太懂，好在主要还是讲管理这种比较通用的内容的，所以不能算是过时。虽然好像现在也没有什么看管理类书籍的必要，我也不会去主持什么项目，但其中的一些观点之类的还是可以用在个人生活或者是小项目中的。</p><p>薛定鄂写的那本严格来说不算是科普的科普书，也的确很有意思。虽然物理学家讲生命这事儿挺奇怪的，但也算是从一个很有意思的角度来看了这件事情。书中关于哲学内容的探讨也挺厉害的(或者说物理学家学多了都变成哲学家了)，阅读起来稍微有点吃力，不论是物理方面的内容还是哲学方面的内容，都需要动不动停下来想想，但一旦想明白了就会不由得感叹一句卧槽了……看世界的角度都变得物理学家了起来。</p><p>《文心》更适合给初中生普及语文知识，学校的语文课真的很不到位。</p><p>《黑暗时代的她们》就是致敬类传记，在西方很政治正确的那种，几个妹子我都喜欢，翻译略差。以女权为卖点的书，就怀着猎奇心理买了。虽然能看出来作者写书的侧重点并不是女权，而是尽可能综合地来讲书中的人物，但不免有种剪报的感觉——例子用得太多，没什么作者自己的明确观点在里面，更何况她讲了好几个艺术家，艺术方面的那些解说我是真的看不懂，而且这些人所处的时代大背景我也都不是太清楚，除了梦露的那部分能感同身受之外都算是一头雾水。</p><p>原研哉那本还是《设计中的设计》的核心思想，只不过挑出来一部分细讲了。</p><p>《中国十亿城民》(虽然我看的是英文版)是在中国呆了很久的歪果仁写的书，记得初中的时候想看中译本，发现太贵了就没买。总之是关于自己一直还算比较关注的城市化问题，农村人口向城市人口的转化。在户籍制度下，在城中生活和工作的农村人口很难向城市人口转变，进而很难享受到与城市人口同等的福利；农村的土地制度和城市的商品房制度相比少了灵活的交易权，而且也更容易受到地方政府的剥削；政府方面，疯狂的城市扩张与各种公共设施的迅速建设诚然满足了城市人口的快速膨胀，但其实是一种不符合市场规律、十分低效的发展模式，圈地也容易使政府财政收支出现问题；过高的房价使得人民将大部分收入用来购入房产，农村和进城人口的消费习惯完全没有形成，反而不利于拉动内需，刺激消费的增长。当然，感觉作者讲得还算中肯，也对中国的高效与执行力做出了一定的褒奖，但正如作者所说的——每一个当地官员都会谈到中国没有出现其他发展中国家在城市化过程中的贫民窟，可是在大多数情况下是，如果城市不能承受住足够的外来人口，他们会直接把他们赶走。这书明明是 2012 年写的。</p><p>《下流社会》和《中国十亿城民》都不是太新鲜的书，但里面的问题都显然没解决，一个是发展中国家城市化的冲突，另一个是发达国家看不见的阶级固化，类似的书挺多的。</p><p>安利吴晓波的激荡系列，根正苗红是不假，问题是读起来真他妈有意思。</p><p>简史系列同理，明明是融合了多个学科观点的历史书，但不知道为什么就像看起点爽文一样顺。能写出这样的畅销书，两个作者我是真的服气。</p>]]></content>
        <category label="阅读笔记" term="阅读笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[史记商君列传]]></title>
        <id>/2018/08/24/shangjunliezhuan</id>
        <link href="https://sheronw.github.io/2018/08/24/shangjunliezhuan"/>
        <updated>2018-08-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[之前一直觉得商鞅的故事挺让人费解的，尤其是他这么拉仇恨。但这只是一个现代人的理解——虽然现在也没好到哪里去，但至少我们还标榜法制社会嘛，民主法治不算深入人心但基本上都懂。我无法想象在一个统治阶级啥都说了算（现在不是？）的世界里，一个人跑出来说要法治要法治在什么程度上触及了既得利益者的利益。]]></summary>
        <content type="html"><![CDATA[<p>之前一直觉得商鞅的故事挺让人费解的，尤其是他这么拉仇恨。但这只是一个现代人的理解——虽然现在也没好到哪里去，但至少我们还标榜法制社会嘛，民主法治不算深入人心但基本上都懂。我无法想象在一个统治阶级啥都说了算（现在不是？）的世界里，一个人跑出来说要法治要法治在什么程度上触及了既得利益者的利益。</p><p>一个不算结论的结论：读古书的时候，不要站在一个穿越者的角度上去思考，结合时代背景才会不那么容易去纠结无关痛痒的点。这是在纵向层次上说的，不同文化间的横向的比较也同理。</p><p>当然，商鞅死得惨从某种程度上来说，好像也的确是自己作的——这老铁活得太超前了嘛。现代的官员，事情办得好，荣华富贵似乎是理所应当的，更何况私有财产神圣不可侵犯好像已经称为了常识。但在那个时候，当官的，如果你不是贵族，一定要低调低调再低调才算美德，和上古时代一个德性，商鞅相比之下就太膨胀了。</p><p>不过他存在的意义，就是用来打破这些自古流传的规矩不是吗，他不会 care 这单独一条规矩的。只可惜在之后的几千年里，中国信得也是那些儒家从上古的规矩中还原的那一套。也不能说一点道理都没有吧，但后世像商鞅那样的人似乎就不多了，以至于最后得凭借外力来打破那些陈旧的规矩了。</p><p>（司马迁好像也是儒生吧……？感觉他基本上都在 diss 商鞅 hhh</p>]]></content>
        <category label="阅读笔记" term="阅读笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[深圳小纪行]]></title>
        <id>/2018/05/24/shenzhen1st</id>
        <link href="https://sheronw.github.io/2018/05/24/shenzhen1st"/>
        <updated>2018-05-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[虽然之前没去过，但基本上和自己的预想没什么区别，除了真的没想到五月份就这么热 QvQ]]></summary>
        <content type="html"><![CDATA[<p>虽然之前没去过，但基本上和自己的预想没什么区别，除了真的没想到五月份就这么热 QvQ
就业环境什么的没条件实地考察，也就远远看个 logo 什么的，感觉和其他城市并没有太大差别。不过好在基础设施和城区都比较新，空气和绿化炒鸡棒，感觉是一个很积极向上的地方？
本来也不能用一个旅游城市来衡量它，所以其实本身作为旅行的体验的确好像也不怎么样，再加上正好没赶上双年双城展和设计周，感觉就是文化上的荒漠。
城区的一些小细节还是很有设计感的，感觉政府对文化产业也有一定投入，但因为太年轻总感觉这城市没啥底蕴……
总之就是一个适合工作但真心不适合享受的地方。</p><p>另外，在地铁上看到的统一校服比帝都地铁上看到的要好看(我真的不是黑 X 大附中)！
去深圳前对它的印象仅限于老人画的圈和鹅厂，找符合这城市气质的书发现根本找不到，于是勉为其难选了「激荡三十年」，在飞机上正好看完了关于袁庚和他的蛇口那段。
其实我一开始是对那个 V&amp;A 感兴趣，然而高价门票把我给推到了楼上的免费展馆，就是那个蛇口改革开放博物馆，没想到这儿竟然成了这一个周里自认为唯一值得去的地方。博物馆的布置和装潢的确超级符合我个人的美学，可惜正好赶上某 zf 组团学习，穿正装带话筒的小姐姐一直在逼逼，体验不是太好，包括文中提到的设计方和相关部门的博弈，在天朝也是喜闻乐见，不再赘述。
不过，我仍然难以喜欢上深圳这个城市，自始至终都觉得这里只有机会没有内涵，就像空空荡荡的 V&amp;A 那样，算是文化上的荒漠，强政府可以让经济短期飞升，然而提升文化很难。更糟的是，随着与其他城市的同质化，深圳在其他方面也不再是蛇口的那个乌托邦，或者是改开的桥头堡。
当然，感觉这个城市我应该是绕不过去了，就等不那么热而且还有双城展的时候一个人再去一次吧。</p>]]></content>
        <category label="游记" term="游记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[2017年度书单]]></title>
        <id>/2018/01/12/2017booklist</id>
        <link href="https://sheronw.github.io/2018/01/12/2017booklist"/>
        <updated>2018-01-12T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[拖了很久才动笔写，一口气全写完感觉快要吐了。今年按理来说真的不算特别忙，但所有的品类加在一起也就读了二十本左右（不过小说类比往年低了很多……真的是一年比一年小说看得少），而且回顾思考也远远不到位，希望 2018 能够养成抽空读书的好习惯。]]></summary>
        <content type="html"><![CDATA[<p>拖了很久才动笔写，一口气全写完感觉快要吐了。今年按理来说真的不算特别忙，但所有的品类加在一起也就读了二十本左右（不过小说类比往年低了很多……真的是一年比一年小说看得少），而且回顾思考也远远不到位，希望 2018 能够养成抽空读书的好习惯。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="1-仲夏之死">1. 《仲夏之死》<a class="hash-link" href="#1-仲夏之死" title="Direct link to heading">​</a></h2><p>by 三岛由纪夫</p><p>不是很懂文学，不太好评判。比起彻底厌世的太宰，三岛的文笔有一种昭和味道的纤细，还带点贵族气息。一边是繁华的市井，一边是放弃人生的人，平凡人的幻灭其实也没什么可说的，但加上了不知道该说时冗杂还是细腻的心里描写，这些破碎的故事反而别有一番风味。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="2-人间草木">2. 《人间草木》<a class="hash-link" href="#2-人间草木" title="Direct link to heading">​</a></h2><p>by 汪曾祺</p><p>一直觉得散文很无聊，冲着『夏天』中关于栀子花的描写买了这本书，然后才发现汪曾祺老爷子还真可爱，字里行间总有股朴实劲儿，从来找不出什么空话套话，也从来不讲什么大道理，简简单单像个孩子，还有很多幽默的字眼，读着特顺溜。除了各种有趣的日常观察之外，关于西南联大的各种你不知道的事情也蛮有意思的，强烈推荐。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="3-圣经中文和合本">3. 《圣经中文和合本》<a class="hash-link" href="#3-圣经中文和合本" title="Direct link to heading">​</a></h2><p>花了好几个月，扫完了全文（是的……没有认真读），对于这么一本全球性的典籍来说，不知道为啥感觉翻译成中文之后文学性大打折扣（想想一下诗经什么的翻译成英文……）。即使将神迹显现的部分去掉，一切也仍然成立，换句话说，这不是一个神的故事，这是一部人的历史。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="4-万万没想到用理工科思维理解世界">4. 《万万没想到：用理工科思维理解世界》<a class="hash-link" href="#4-万万没想到用理工科思维理解世界" title="Direct link to heading">​</a></h2><p>by 同人于野</p><p>题目有噱头，感觉应该是畅销书。作者的功力和学识我自然是认可的，但因为是博客的摘选，比较碎片化，和十万加本质上没什么区别。虽然不过作者科普做得很到位，和由人组成的社会结合起来谈科学的内容也有新意，但只能当作消遣读物在地铁公交车上打开看看，别指望能够瞬间读出什么干货就是了。仍然推荐。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="5-群体性孤独">5. 《群体性孤独》<a class="hash-link" href="#5-群体性孤独" title="Direct link to heading">​</a></h2><p>by 雪莉·特克尔</p><p>可能是比较早的探讨科技给人精神层面带来的困境的书……？作者是社科出身的，行文比较感性一点，也没有什么特别强有力的观点，第一部分探讨人工智能和机器人的可能性，第二部分是社交媒体和 IM，都和现在日常生活中感受到的孤独有关（因为时代原因，现在看来这些问题和其它问题相比都没那么严重了），读起来稍微有点无聊。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="6-二手时间">6. 《二手时间》<a class="hash-link" href="#6-二手时间" title="Direct link to heading">​</a></h2><p>by S.A.阿列克谢耶维奇</p><p>这是一本真实的访谈录。不愧是诺奖得主，关于人性的探讨和历史的厚重感根本不是我能够详细阐述的。选题叫『二手时间』，题材的跨度以及写作时间都很长，从备受争议的斯大林时代到苏联解体，甚至俄罗斯建国后的一些历史遗留问题还有恐袭都有所涉及。在历史课本上被一带而过的从十月革命到苏联解体的这段时间里，无数俄罗斯人民的血与泪都挥洒在了这片土地上。</p><p>从各种意义上来说，俄罗斯这个民族都很特殊——在高寒冻土的艰苦条件下生活的太久了，以至于面对死亡和战争时都平静得可怕，仿佛他们正为此而生。当然，这也是一个文豪辈出的国度，在那个计划经济的年代，书籍才是人们的食粮，每个人都在阅读和谈论文学，他们相信哲学，相信爱，甚至可以为了理想而疯狂。上天赋予了俄罗斯人复杂的天性，也赋予了他们多舛的命运。『俄罗斯的生活就应该是不幸的，贫寒的，那样灵魂才能高尚。它的意义就在与它不属于这个世界，越是肮脏和血腥，灵魂越能得到自由……』</p><p>阿列克谢耶维奇一贯采用纪实文学性质的复调写作，自始至终都没有为任何谈话添加自己的主观意愿，因此我们可以在同一本书、甚至同一章节中见到两种针锋相对的观点，这也预示着不同的人在不同的立场上发声，没有人是『政治正确』的。受访者多为普通民众，却十分具有代表性，因为『这是属于一个时代而不是某一个人的故事』，在大的时代背景下，小人物的牺牲往往是被忽略的，因此同样的故事反反复复地发生。</p><p>当然，被议论得最多的就是『苏联』存在过的意义了。一方人憎恨计划经济，憎恨斯大林以及那个时代的种种荒谬却又骇人听闻的行为（初中的时候还买过古拉格的书，但我没读完……）以及给人们带来的巨大伤痛。然而另一方人，多是那些老年的、为苏联奉献一生的人，却无比怀念那个光荣的时代：苏联在艰苦的条件下造出了原子弹、击败了希特勒、水坝和各种公共设施从无到有……他们为共产主义的不战而败而惋惜，同时也因为理想时代和拜金主义切换得如此之迅速而无比困惑。『商店里满是香肠，但人们没有幸福。我再也看不到人们炽热的目光了。』</p><p>因为我们也经历过如斯大林时代一般的『狂热』，也曾为姓『资』还是姓『社』而争论不休，因此这本书，以及曾经红色帝国的历史，对我国也许会有特别的借鉴意义，如果能够耐心看得完厚厚一本的话，强烈推荐。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="7-少女不十分">7. 《少女不十分》<a class="hash-link" href="#7-少女不十分" title="Direct link to heading">​</a></h2><p>by 西尾维新</p><p>其实这是我看的第一本西尾维新的轻小说……说实话感觉挺一般的，可能是因为自己看过一些他原作担当的动画而且喜欢的轻小说作者入间人间是他的脑残粉所以要求有点高。当然这个差不多是伪自传的文章也不需要开太多脑洞，所以还没看完我就猜到结局了（喂）。</p><p>虽然是这样，西尾的文笔倒是真的有那种轻小说的风范，特点就是废话多，一点剧情配十万句吐槽，物语系列还是新房改得好，特点都保留了（来来来让我看到你们的暂停键），当然这是跑题了。……所以阿宅们比较有带入感，然后再弄点家里蹲的人生危机就能大卖了，换句话说西尾算不上是小说家，应该说是输出某一种特定价值观的 OTAKU 人生导师吧……？</p><p>具体有多废话呢，前 20 页根本没情节，而全篇也差不多是这种步调吧，一个短篇小说的情节量凑了一本书，终于知道为什么刀语一卷改一集动画了，当年追忆飞行员好像是一本就是一个剧场版……？虽然可能是这方面的东西（西尾价值观）接触太多了，所以我其实还是很喜欢西尾这种风格的，看来我的思想已经严重西化了 hhh</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="8-天空的另一半">8. 《天空的另一半》<a class="hash-link" href="#8-天空的另一半" title="Direct link to heading">​</a></h2><p>by 尼可拉斯·D.克里斯多夫&amp;雪莉·邓恩</p><p>可能我就是那种利己主义者，看完全书之后内心毫无波动。为自己争取权利，同时为自己所在的群体争取权利，这点觉悟我还是有的，然而自己这儿还有一摊乱事还去帮别人，对不起我做不到。虽然从这个角度上看作者的出发点并没有什么不妥，文章都一度在纽约时报上登载了，愿意干好事的有钱人也会看到的，只要一百个人里面有一个人看到了也会大不一样。可能这就是西方媒体的一种责任吧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="9-国富论罗卫东选译本">9. 《国富论（罗卫东选译本）》<a class="hash-link" href="#9-国富论罗卫东选译本" title="Direct link to heading">​</a></h2><p>by 亚当·斯密</p><p>我不知道该怎么说这本书，一是因为这只是选译本，无法窥其全貌，二是因为这种到处都是精华的书没法写一个概括出来。如果你是一个没上高中的初中生的话，强烈建议稍微瞧几眼选译本，比高中政治课本经济生活部分不知道高到哪里去了。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="10-贝尔实验室与美国革新大时代">10. 《贝尔实验室与美国革新大时代》<a class="hash-link" href="#10-贝尔实验室与美国革新大时代" title="Direct link to heading">​</a></h2><p>by 乔恩·格特纳</p><p>这本书讲的是贝尔实验室从建立到重组直至衰落的历史，中间提到的科学家很多，不少重要科研成果的研发过程也很有意思，包括但不限于我们现在司空见惯的晶体管、太阳能电池、光导纤维、激光、通讯卫星、蜂窝移动数据还有现代通讯技术的基本概念，而且贝尔实验室兴起的时代正是美国赶超欧洲的那个年代，听上去还真是热血沸腾。尽管上文提到的每一个发明都巨牛逼，但作为『创新』成果来讲贝尔实验室留给后人的遗产反而是一种培养并管理创新人才的系统，即使在今天都值得借鉴。不管怎么说，贝尔实验室的成就代表了那个辉煌的年代，正是它孕育出了当时的未来，也就是我们如今习以为常的现在。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="11-单身社会">11. 《单身社会》<a class="hash-link" href="#11-单身社会" title="Direct link to heading">​</a></h2><p>by 克里南伯格</p><p>本来以为是和什么年轻人不婚有关的书（这样就可以理直气壮地保持单身了），但好像也没有给出什么特别新的观点，主要是一些访谈什么的，而且很大一部分内容都给了老年人独居的问题，可以参考《无缘社会》。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="12-斯通纳">12. 《斯通纳》<a class="hash-link" href="#12-斯通纳" title="Direct link to heading">​</a></h2><p>by 约翰·威廉斯</p><p>这书我一开始就是在国家图书馆书架上随便找的，结果没想到看了几页不知为何有些哽咽，回去入了 kindle 版。喜欢这种行文叙事的感觉，克制又不失张力。一个平淡无奇的人，平淡无奇地出生，平淡无奇地活着，平淡无奇地死去，而人生好像其实就是这样。推荐。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="13-大国大城">13. 《大国大城》<a class="hash-link" href="#13-大国大城" title="Direct link to heading">​</a></h2><p>by 陆铭</p><p>讲中国城市（尤其是一线城市）的规划问题，写了一些现有政策（尤其是户籍制度）的不合理性并提出了建议，打算二刷。陆铭教授绝壁是中国学界一股令人心疼的泥石流，整本书清晰易懂又有理有据，然而书都出了好几年了到目前为止政策并没有什么变化。强烈推荐。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="14-weapons-of-math-destruction">14. 《Weapons of Math Destruction》<a class="hash-link" href="#14-weapons-of-math-destruction" title="Direct link to heading">​</a></h2><p>by Cathy O'Neil</p><p>一个数据学家以自己亲历的职业经验为起点，搜集了各种导致阶级固化恶性循环的数据处理筛选系统并命名为 WMD（Weapons of Math Destruction），看了之后各种细思恐极。虽然好像在美国这种现象更加严重，但在中国也能够感同身受。我不认为这是陈词滥调，毕竟原本人们可以规避这一切，算是为目前正火的什么 big data 敲响了警钟。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="15-one-child-the-past-and-future-of-chinas-most-radical-experiment">15. 《One Child: The Past and Future of China's Most Radical Experiment》<a class="hash-link" href="#15-one-child-the-past-and-future-of-chinas-most-radical-experiment" title="Direct link to heading">​</a></h2><p>by Mei Fong</p><p>马来西亚华裔作为纽约时报记者，以一个旁观者的角度写的书。出人意料地包括了关于独生子女政策许多方面，比如对于重男轻女、超生、独生子女的娇惯现象以及失独家庭。整本书并不长，作者官网有中文版下载（但应该被墙了吧）。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="16-a-christmas-carol">16. 《A Christmas Carol》<a class="hash-link" href="#16-a-christmas-carol" title="Direct link to heading">​</a></h2><p>by Charles Dickens</p><p>在那个年代肯定算是不错的人文关怀类小说，可惜现在看来有点套路（虽然双城记也有点套路但没它这么套路），可能是我之前看过类似的故事吧，直接猜到结局了 QvQ</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="17-all-i-really-need-to-know-i-learned-in-kindergarten">17. 《All I Really Need to Know I Learned in Kindergarten》<a class="hash-link" href="#17-all-i-really-need-to-know-i-learned-in-kindergarten" title="Direct link to heading">​</a></h2><p>by Robert Fulghum</p><p>也是一本散文集，虽然这是我读的第一本全英文的散文集，但这作者和汪曾祺老爷爷的风格有点像，还是走日常诙谐路线的（可能是美式休闲风吧），所以读起来并不难，有空的时候就读一篇小短文也不累。不过成书在上个世纪八十年代，有的时候发现了关于美国那个时代的一些小细节（比如冷战什么的）还觉得挺有意思的。这本书里的序言被人教版高中语文课本收录了，起了个名字叫《教条》，当初就印象深刻……</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="18-复眼人">18. 《复眼人》<a class="hash-link" href="#18-复眼人" title="Direct link to heading">​</a></h2><p>by 吴明益</p><p>虽然只看过吴明益的《天桥上的魔术师》，但一直觉得他是那种 typical 的台湾小说家 hhh 之前那本《天桥上的魔术师》主要是讲台北，而这本《复眼人》讲台湾土著的一些价值观和古老传承更多一点（一本是城市，一本是自然），而且关于女主儿子的那段我觉得逻辑上稍微有点站不住脚，可能这种文艺的人更适合写一个留下很多空白的人物（比如天桥上的那个魔术师）而不是进行世界观搭建吧。虽然我真的更喜欢《天桥上的魔术师》多一点，但这本《复眼人》也还算不错。如果有机会的话可以读一下。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="19-from-the-soil-the-foundation-of-chinese-society">19. 《From the Soil: The Foundation of Chinese Society》<a class="hash-link" href="#19-from-the-soil-the-foundation-of-chinese-society" title="Direct link to heading">​</a></h2><p>by 费孝通</p><p>挺有年头的书了，现在中国农村的情况已经大不一样了，但有很多传统的思想还是没有改变的。整本书不太厚，有机会应该会认真重读吧。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="20-willful-blindness">20. 《Willful Blindness》<a class="hash-link" href="#20-willful-blindness" title="Direct link to heading">​</a></h2><p>by Margaret Heffernan</p><p>研讨课上要求的课本，讲人的潜意识在日常生活中的一些表现，运用了大量的例子引证，不过大多数例子都和美国人的日常生活密切相关（或者是他们亲身经历过的），所以中国人读起来可能没有那种熟悉的感觉。差不多是自己（不得不）正经八百地读的第一本英文作品。之前很少接触这种体裁的文学，留学之后才发现还是挺多的。</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="21-the-hidden-brain">21. 《The Hidden Brain》<a class="hash-link" href="#21-the-hidden-brain" title="Direct link to heading">​</a></h2><p>by Shankar Vedantam</p><p>也是研讨课上要求的课本，但感觉比上一本写的要好一点，例子举得没那么碎了还图文并茂，而且这个作者好像挺擅长使用比喻和通感这两种修辞手法的（喂）。总之看了这两本书之后对人类的潜力感到深深地绝望。本来以为自己会变得更好，结果科学研究发现『你不行的』『你做不到的』『这是基因所决定的』『这就是人类极限了』。本来以为人活着要被社会和其他各种东西所束缚所以不可能自由，结果其实连自己都不受自己控制 hhhh</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="22-黄昏色的咏使">22. 《黄昏色的咏使》<a class="hash-link" href="#22-黄昏色的咏使" title="Direct link to heading">​</a></h2><p>by 细音启</p><p>人生中读完的第一个轻小说系列，初中的时候看着觉得写的真好，后来就下了电子书重温了一遍，现在看来好像没有当时看的时候觉得那么好了，但仍然是目前心中轻小说 NO.1，之后细音启写的东西一本不如一本，只有这本还没完全被商业气息给沾染，还是最初的少年少女的故事。</p>]]></content>
        <category label="阅读笔记" term="阅读笔记"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[不知道应该起什么标题的纽约纪行]]></title>
        <id>/2018/01/05/Christmas2017InNYC</id>
        <link href="https://sheronw.github.io/2018/01/05/Christmas2017InNYC"/>
        <updated>2018-01-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[今年圣诞假也就两个周，和过年的时间也对不上，所以自认为并没有回国的需要（最主要的是今年入了 Pixel 2，还有各种在墙外用习惯了的服务，不想回国再折腾），于是和几个中国留学生合计了一下，发现去趟纽约的来回路费+Airbnb 多人拼房的费用比来回机票要便宜点儿，就在距离出发一两周前十分敷衍地把所有东西订完了（其实早点定的话会更便宜……）。]]></summary>
        <content type="html"><![CDATA[<p>今年圣诞假也就两个周，和过年的时间也对不上，所以自认为并没有回国的需要（最主要的是今年入了 Pixel 2，还有各种在墙外用习惯了的服务，不想回国再折腾），于是和几个中国留学生合计了一下，发现去趟纽约的来回路费+Airbnb 多人拼房的费用比来回机票要便宜点儿，就在距离出发一两周前十分敷衍地把所有东西订完了（其实早点定的话会更便宜……）。</p><p>不过，写点什么好呢，只好翻翻自己没写几个字的流水账本和（第一个周）同行的女生在微博发的 Vlog（因为本人在里面有正脸……所以就不发 URL 了 hhhh），Vlog 什么的似乎最近很流行的样子，看起来感觉也很好，但我连照片都懒得拍，拍视频什么的太难为我了 QvQ</p><p>然后才发现……因为我们这一行人都懒散没规划，回过头来看看这两个周的假期并！没！有！逛！多！少！地！方！也就吃得还挺好（和我们学校 typical American food 相比），日常就是睡到中午，下午逛一会儿，晚上回去各自抱着各自的电脑熬到下半夜，再加上我们都是几个没什么仪式感的人，所以圣诞节和元旦也就跟没过差不多，甚至比平时都敷衍。</p><p>其实之前一直觉得美国不美（和世界上绝大多数国家 or 地区比，真的），尤其是非自然景观，因为这是一个老牌的现代化国家，所以一切都是看起来旧旧的新东西，历史感不浓厚。目前唯一能够感受到历史厚重感的地方应该就是东部的没落工业地区吧，就和<em>迷河</em>或<em>Sally Face</em>里的场景，还有我在路上看到的大多数没有什么烟火气的小镇一样，充满着颓圮的气息，楼要不高不低，砖要红，周围要有杂草，天要阴——这是一种不太积极向上的美感，但也是我目前为止唯一觉得美国“漂亮”的地方（至于一些高大上的东西，摩天大楼还有高科技什么玩意儿的，放在哪个国家都一样，所以忽略不计）。</p><p>纽约也是这样，虽然不能算是没落，但你可以深切地体会到这里的 <strong>脏 乱 差</strong> ，莫名其妙杂乱无章的城市规划，无处不在的垃圾和污水，大冬天睡在路边的无家可归者，总是有股尿骚味的地铁站里跟你搭讪的流浪汉。虽然说是这么说，我还是觉得纽约是散发着独特的魅力的，但又说不出来到底为什么——也许她的居民可以随意布置自己的房子不用担心天际线和穿墙打洞，也许不论什么人都能来这儿呆着找机会不必担心自己是低端人口，即使是连英语都不会说的人。Big Apple 的绰号的确不为过，这是一个纷繁复杂的万花筒。</p><p>不过说是纽约纪行，但主要的活动范围其实也就在曼哈顿，尤其是比较靠南的那一块儿，就是 SOHO 和东村附近。最开始的几天好像都在陪着他们逛街（之后的几天好像也在陪他们逛街），大概就是 SOHO 周遭的各种小店铺大店铺，然而其实我最大的花销就是为了晚上大家一起看电影而在 APPLE Store 买的 mini porter to HDMI adpter……接近四十刀的价格感觉肉疼极了。其实可能是之前我在国内也没买过那些牌子，反正看了看价格也都不便宜，在 H&amp;M 买了个白色卫衣就三十多刀，我之前的卫衣明明是漫踪打折的时候花了软妹币七八十捞的 hhh</p><p>然后好像我们一直都在逛街，去了世贸中心附近但完全没去 911 纪念馆一直在逛街，第五大道洛克菲勒广场之类的当然更是逛街，本来打算去西边的高线公园但其实也没去成也是在附近逛街……可是因为去的时候只带了个书包连箱子都没带，回来的时候也只带了个书包，也就买了件卫衣买了条裤子，回来的时候都穿身上了，也没有什么购物体验可以分享（这次旅行之后我发现我之前真的对男孩子们的购买力和逛街力有很大的误会……可以说是纠正了刻板印象了）hhh</p><p>公园的话，好像去了 bryant park 的那个冬天的集市，但仅仅是路过所以根本没逛，再就是大名鼎鼎的 central park，正好去的那天下了挺大的雪，虽然人不多但真的是白茫茫一片啥都没有如果是夏天草木繁盛的时候去应该会很热闹吧，但冬天真的没什么可看的。</p><p>纽约本来有无数值得去的博物馆艺术馆啊之类的，可是我们也就去了三个，大都会（MET），现代艺术（MoMA）还有自然历史博物馆（其实就是最著名的那三个）。</p><p>MET 真的很棒，之前初中毕业旅行的时候就去过一次，而这次旅行有四分之一的时间都贡献给了它，尽管如此去了这么多次常规展览也可能看了不到四分之一 QvQ 说到逛博物馆，我一直都特别讨厌那种去最知名的几个展品前面拍好照绕了一圈就算是去过了的那种游览方式，可是如果要仔细观察每一个展品，把所有的说明都看完，听一遍官方解说再把各种历史背景了解完的话，估计一天一个展厅都看不完吧 hhh 这次正好同行的都是文科生，听他们一边解释一边讨论希腊罗马古埃及历史还有各种兵器的演变感觉还是挺有意思的。</p><p>在某些展厅可以看到外面中央公园的方尖碑，再加上在埃及展馆神庙前面有当初碑下放着的螃蟹，于是出于好奇就冒着严寒去看了一下。这个方尖碑和华盛顿特区那个美国人仿造的不一样，倒是埃及人公元前 15 世纪造的真货，换了好几个王朝挪了好几个地方，到托勒密王朝的时候有了个名字叫克娄巴特拉之针，反正辗转之后被送到了美国。一直都是这样，征服了一个古老又辉煌的文明之后就把那边的宝贝搬回家，和当年圆明园似的。估计古埃及那帮人也没想到过自己出于某种愿望建造的方尖碑会被挪好几个地方，从一个帝国到另一个帝国，直到几千年后远渡重洋，来到一个年轻又野心勃勃的国家，被刻上他们的文字和他们的愿望，放在公园里面供来自全世界的人瞻仰。他们可能更没想到在几千年后，新世界的人们又仿照方尖碑的式样又造了个方尖碑，然后给予了什么别的愿望。</p><p>自然历史博物馆的话，我也就逛了半天，门口有老罗斯福的雕像，卖票的地方还有老罗的语录，看样子应该是和（喜欢自然历史的）老罗有点关系了。虽然进去之后发现基本上全是标本………………可能在之前的时代里看标本是一件挺有意思的事情，但现在各式各样的资源这么多，看标本就有点无聊了。不过人类学方面的一些展馆都挺有意思，我看了大洋洲和亚洲的部分，之前一直不知道人类学都是学啥的，看完了之后大概有了一点印象 hhh</p><p>虽然 MoMA 有很多著名的展品，但恕我直言，这个品牌营销做的十分不错，首先 MoMA 这四个单词就已经是一种符号一样的品牌形象了，还有那么多周边产品和 Store（是的，感觉这栋楼已经被周边店给充满了，而除了楼马路对面还有一家），最主要的是楼下的那家餐馆还是米其林（当然我没去）……所以门票也是这几个里面最贵的，因为另外两个博物馆都是捐赠制每次不要脸地交一美刀就进去了 hhh 我去的那一天 MoMA 挤满了人，完全没有看下去的兴致。其他的展品倒是名气不大，但我至少硬着头皮看不懂装懂地看完了，可是五楼的那些画，本来值得好好看看，但看着一堆人排队在前面合影我就……嘛，所以梵高的星空我连看都没看，毕加索马蒂斯夏加尔的一些之前在画册上见到的我还是远远观望了一下。有意思的是 MoMA 的门票可以兑换一张楼下 MoMA 电影院的票，我看的是<em>Smithereens</em>，1982 年的片子，很嬉皮士歌很好听，虽然和展品一样看不懂。</p><p>其实这次旅行花销最多的就是吃，主要是吃一些在我们村里吃不到的东西，比如中餐和日料，我们也没有去找什么推荐都是在路边随便找的店铺，最主要的是我……也感受不出来好吃不好吃，应该算是好吃吧，但就是贵极了，基本上都是把美元当人民币花的节奏。吃过一次法餐，还是从 MET 出来在上东区走投无路吃的（虽然我觉得还蛮好吃的）。结果就是最后几天我们都吃土了，天天吃 burger king 和 subway……</p><p>说下纽约的地铁，其实感觉没有网上说的那么乱，uptown 往北走 downtown 往南走，分清楚 local 和 express 这两种车，再就是仔细听广播还有多注意观察各种指示牌，反正我倒是没有遇到什么大问题。治安的话，即使是午夜地铁里也挤满了人……虽然还是有各种奇奇怪怪的人。卖艺的倒是挺多，虽然可以说是噪音污染但大部分时间都感觉很有 feel，一想到北京地铁的卖艺人就觉得有点扎心。</p><p>最后秀一下单纯充值信仰订的 Google Photo Book，九块九（美元）包邮的平装版，因为精装版十九块九……没怎么拍照所以把一些乱七八糟被发在别人微信群里的合照也加上了才凑够了最低要求二十张。印刷的话好像都是比屏幕上的颜色要深一些，以及 pixel 原生的图片印出来的效果都挺好，别人的手机（iphone）因为通过微信传输的原因（有的是发原图有的不是）会糊一点，内页的话……自己摄影水平垃圾就不放了。</p><p><img loading="lazy" src="http://images2.imagebam.com/4c/3b/0d/d1db95714051993.jpg" alt="photo" class="img_ev3q"></p>]]></content>
        <category label="游记" term="游记"/>
    </entry>
</feed>